{"version":3,"file":"static/js/12.531b34ed.chunk.js","mappings":"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","sources":["app/components/features/ProductManager/Components/ProductsCard/Food.tsx","app/components/features/ProductManager/Components/ProductsViewer/Common/CategoryViewer/Category.tsx","app/components/features/ProductManager/Components/ProductsViewer/Common/CategoryViewer/CategoryViewer.tsx","app/components/features/ProductManager/Components/ProductsViewer/Common/CategoryViewer/index.ts","app/components/features/ProductManager/Components/ProductsViewer/Shops/ViewerFood.tsx"],"sourcesContent":["import { IProductFood } from \"app/interfaces\";\nimport styled, { useTheme } from \"styled-components\";\nimport { Box, Col, Img, Row, Text } from \"ui/basic\";\n\nexport enum EItemCardFood {\n  Card = \"card\",\n  Strip = \"strip\",\n  Preview = \"preview\",\n}\nexport interface IItemFoodCard {\n  item: IProductFood;\n  onPreview?: (item: IProductFood) => void;\n  mode?: EItemCardFood;\n  showCategory? : boolean;\n}\n\nconst ItemFoodCard: React.FC<IItemFoodCard> = ({\n  item,\n  onPreview,\n  mode = EItemCardFood.Strip,\n  showCategory= false\n}) => {\n  const theme = useTheme();\n  const handleItemPreview = () => {\n    if (!onPreview) {\n      console.warn(\"No Preview Handler Provided\");\n    }\n    if (onPreview) {\n      onPreview(item);\n    }\n  };\n  const isRow = mode === EItemCardFood.Strip || mode === EItemCardFood.Preview;\n  const { category }  = item;\n  const categoryFormat = category?.replaceAll('/', ' / ');\n  const fd = isRow ? \"rr\" : \"c\";\n  const previewHandler =\n    mode === EItemCardFood.Preview ? undefined : handleItemPreview;\n  const detailsGap = isRow ? \"0.5rem\" : \"0.5rem\";\n  return (\n    <Box fd={fd} a=\"start\" p={\"1rem\"} style={{ gap: isRow ? \"1rem\" : \"\" }}>\n      {item.image ? (\n      <Row w=\"80%\" h=\"7rem\" style={{ borderRadius: \"8px\" }}>\n          <Img\n            onClick={previewHandler}\n            src={item.image}\n            alt={item.name}\n            br=\"0.5rem\"\n            style={{ cursor: \"pointer\" }}\n          />\n      </Row>\n       ) : null}\n      <Col p={\"0.5rem 0 0 \"} j=\"center\" style={{ gap: detailsGap }}>\n        <Row a=\"center\">\n          <Row\n            w=\"initial\"\n            p=\"2px\"\n            a=\"center\"\n            style={{\n              border: \"1px solid \" + (item.veg ? \"green\" : \"#da0828\"),\n              borderRadius: \"3px\",\n            }}\n          >\n            {item.veg ? <VegIcon /> : <NonVegIcon />}\n          </Row>\n        </Row>\n        { showCategory ? \n          <Text s=\"12\" w={6} c={theme.neutralColor.textTertiary}>{`In ${categoryFormat}`}</Text> :\n          null\n        }\n        <Text\n          tt=\"cap\"\n          onClick={previewHandler}\n          w={5}\n          s=\"14\"\n          c={theme.neutralColor.text}\n          style={{ cursor: \"pointer\" }}\n        >\n          {item.name}\n        </Text>\n        <Text w={6} s=\"14\" c={theme.neutralColor.textSecondary}>\n          &#x20B9; {item.price}\n        </Text>\n      </Col>\n    </Box>\n  );\n};\n\nconst VegIcon = styled.div`\n  width: 6px;\n  height: 6px;\n  background: green;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst NonVegIcon = styled.div`\n  width: 6px;\n  height: 6px;\n  background: #da0828;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default ItemFoodCard;\n","import { IProductFood } from \"app/interfaces\";\nimport { useRef, useEffect } from \"react\";\nimport { useTheme } from \"styled-components\";\nimport Icon, { IconName } from \"ui/Icon\";\nimport { Col, Row, Text } from \"ui/basic\";\n\nimport React from \"react\";\nimport ItemFoodCard from \"../../../ProductsCard/Food\";\n\n\ninterface ICategory {\n  products: IProductFood[];\n  subCategories: Record<string, ICategory>;\n}\n\ninterface ICategoryList {\n  isTopLevel?:boolean;\n  onCategoryPosition: (category: string, position: number) => void;\n  categoryName: string;\n  category: ICategory;\n  scrollContainer?: React.RefObject<HTMLDivElement>;\n  expandedCategories: { [category: string]: boolean };\n  onCategoryToggle: (category: string) => void;\n}\nconst Category: React.FC<ICategoryList> = ({\n  category,\n  onCategoryPosition,\n  categoryName,\n  scrollContainer,\n  expandedCategories,\n  onCategoryToggle,\n  isTopLevel = false,\n}) => {\n  const categoryContainerRef = useRef<HTMLDivElement>(null);\n  const isExpanded = expandedCategories[categoryName];\n  const theme = useTheme();\n\n  useEffect(() => {\n    const calculatePosition = () => {\n      const categoryContainer = categoryContainerRef.current;\n      const scrollContainerElement = scrollContainer\n        ? scrollContainer.current\n        : window;\n      if (!categoryContainer || !scrollContainerElement) return;\n\n      const categoryRect = categoryContainer.getBoundingClientRect();\n      let elementTop = 0;\n\n      if (scrollContainerElement instanceof HTMLElement) {\n        const scrollRect = scrollContainerElement.getBoundingClientRect();\n        elementTop =\n          categoryRect.top - scrollRect.top + scrollContainerElement.scrollTop;\n      } else {\n        elementTop = categoryRect.top + window.pageYOffset;\n      }\n\n      onCategoryPosition(categoryName, elementTop);\n    };\n    calculatePosition();\n  }, [categoryName, onCategoryPosition, expandedCategories, scrollContainer]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      const calculatePosition = () => {\n        const categoryContainer = categoryContainerRef.current;\n        const scrollContainerElement = scrollContainer\n          ? scrollContainer.current\n          : window;\n        if (!categoryContainer || !scrollContainerElement) return;\n\n        const categoryRect = categoryContainer.getBoundingClientRect();\n        let elementTop = 0;\n\n        if (scrollContainerElement instanceof HTMLElement) {\n          const scrollRect = scrollContainerElement.getBoundingClientRect();\n          elementTop =\n            categoryRect.top -\n            scrollRect.top +\n            scrollContainerElement.scrollTop;\n        } else {\n          elementTop = categoryRect.top + window.pageYOffset;\n        }\n\n        onCategoryPosition(categoryName, elementTop);\n      };\n      calculatePosition();\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [categoryName, onCategoryPosition, scrollContainer]);\n\n  const categoryProducts = category.products\n  if (!categoryProducts || categoryProducts.length === 0) {\n    return null;\n  }\n\n  const categoryToggleHandler = () => {\n    onCategoryToggle(categoryName);\n  };\n\n  const removeUnderscore = (name: string): string => {\n    return name.replace(/_/g, \" \");\n  };\n  const categoryNameFormatted = removeUnderscore(categoryName);\n  return (\n    <Col ref={categoryContainerRef}>\n      <Row\n        p=\"0.5rem 1rem\"\n        a=\"center\"\n        j=\"between\"\n        onClick={() => categoryToggleHandler()}\n        style={{\n          fontWeight: 600,\n          fontFamily: \"Raleway\",\n          background: theme.neutralColor.bgContainer,\n          cursor: \"pointer\",\n        }}\n      >\n        <Text tt=\"cap\" c={isTopLevel ? theme.neutralColor.text : theme.neutralColor.textSecondary}>{categoryNameFormatted}</Text>\n        <Icon\n          name={IconName.DownArrow}\n          color={isTopLevel ? theme.neutralColor.text : theme.neutralColor.textSecondary}\n          style={{\n            transform: `rotate(${isExpanded ? \"180deg\" : \"0deg\"})`,\n            transformOrigin: \"center\",\n            marginTop: `${isExpanded ? \"4px\" : \"0\"}`,\n            marginBottom: `${isExpanded ? \"0\" : \"4px\"}`,\n          }}\n        />\n      </Row>\n      {isExpanded && (\n        <>\n        <Col p=\"0.5rem\" style={{ gap: \"0.5rem\" }}>\n          {categoryProducts.map((product, index) => (\n            <Row\n              key={index}\n              br=\"8px\"\n              style={{\n                border:`1px solid ` + theme.neutralColor.borderSecondary,\n                background: theme.neutralColor.bgContainer,\n              }}\n            >\n              <ItemFoodCard item={{ ...product }} key={product.id} />\n            </Row>\n          ))}\n        </Col>\n        {Object.entries(category.subCategories).map(([subCatName, subCategory], index) => (\n          <Category\n            key={index}\n            categoryName={subCatName}\n            category={subCategory}\n            isTopLevel={false}\n            onCategoryPosition={onCategoryPosition}\n            scrollContainer={scrollContainer}\n            expandedCategories={expandedCategories}\n            onCategoryToggle={onCategoryToggle}\n          />\n        ))}\n        </>\n      )}\n    </Col>\n  );\n};\n\nexport default React.memo(Category);\n","import { IProductFood } from \"app/interfaces\";\nimport { useEffect, useState } from \"react\";\n\nimport Category from \"./Category\";\nimport React from \"react\";\nimport { categoriseProducts } from \"../../../../services\";\n\ninterface ICategoryviewer {\n  products: IProductFood[];\n  scrollContainer?: React.RefObject<HTMLDivElement>;\n  onActive?: (value: string) => void;\n  onCategoryPositionsUpdate: (category: string, postion: number) => void;\n}\n\nconst CategoryViewer: React.FC<ICategoryviewer> = ({\n  scrollContainer,\n  products,\n  onCategoryPositionsUpdate,\n}) => {\n  const categorisedProducts = categoriseProducts(products);\n  const [expandedCategories, setExpandedCategories] = useState<{\n    [category: string]: boolean;\n  }>({});\n\n  useEffect(() => {\n    const initialExpandedCategories: { [category: string]: boolean } = {};\n    const categorisedProducts = categoriseProducts(products);\n    Object.keys(categorisedProducts).forEach((category) => {\n      initialExpandedCategories[category] = true;\n    });\n    setExpandedCategories(initialExpandedCategories);\n  }, [products]);\n\n  const handleCategoryToggle = (category: string) => {\n    setExpandedCategories((prev) => ({ ...prev, [category]: !prev[category] }));\n  };\n  return (\n    <>\n      {Object.keys(categorisedProducts).map((category) => (\n        <Category\n        isTopLevel={true}\n          category={categorisedProducts[category]}\n          scrollContainer={scrollContainer}\n          key={`${category}`}\n          categoryName={`${category}`}\n          expandedCategories={expandedCategories}\n          onCategoryToggle={handleCategoryToggle}\n          onCategoryPosition={onCategoryPositionsUpdate}\n        />\n      ))}\n    </>\n  );\n};\nexport default React.memo(CategoryViewer);\n\n\n","import CategoryViewer from \"./CategoryViewer\";\n\nexport default CategoryViewer;\n","import React from \"react\";\nimport { IViewerFood } from \"../../../interfaces/viewer\";\nimport CategoryViewer from \"../Common/CategoryViewer\";\n\nconst ViewerFood: React.FC<IViewerFood> = ({ products }) => {\n  return (\n    <CategoryViewer products={products} onCategoryPositionsUpdate={() => console.log('')} />\n  );\n};\n\nexport default ViewerFood;\n\n"],"names":["EItemCardFood","VegIcon","styled","_templateObject","_taggedTemplateLiteral","NonVegIcon","_templateObject2","_ref","item","onPreview","_ref$mode","mode","Strip","_ref$showCategory","showCategory","theme","useTheme","isRow","Preview","category","categoryFormat","replaceAll","fd","previewHandler","undefined","console","warn","_jsxs","Box","a","p","style","gap","children","image","_jsx","Row","w","h","borderRadius","Img","onClick","src","alt","name","br","cursor","Col","j","border","veg","Text","s","c","neutralColor","textTertiary","concat","tt","text","textSecondary","price","Category","onCategoryPosition","categoryName","scrollContainer","expandedCategories","onCategoryToggle","_ref$isTopLevel","isTopLevel","categoryContainerRef","useRef","isExpanded","useEffect","categoryContainer","current","scrollContainerElement","window","categoryRect","getBoundingClientRect","elementTop","HTMLElement","scrollRect","top","scrollTop","pageYOffset","calculatePosition","handleResize","addEventListener","removeEventListener","categoryProducts","products","length","categoryNameFormatted","replace","ref","fontWeight","fontFamily","background","bgContainer","Icon","IconName","color","transform","transformOrigin","marginTop","marginBottom","_Fragment","map","product","index","borderSecondary","ItemFoodCard","_objectSpread","id","Object","entries","subCategories","_ref2","_ref3","_slicedToArray","subCatName","subCategory","React","CategoryViewer","onCategoryPositionsUpdate","categorisedProducts","categoriseProducts","_useState","useState","_useState2","setExpandedCategories","initialExpandedCategories","keys","forEach","handleCategoryToggle","prev","_defineProperty","log"],"sourceRoot":""}