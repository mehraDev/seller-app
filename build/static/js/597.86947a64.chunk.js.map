{"version":3,"file":"static/js/597.86947a64.chunk.js","mappings":"4NAIYA,EAAa,SAAbA,GAAa,OAAbA,EAAa,YAAbA,EAAa,cAAbA,EAAa,kBAAbA,CAAa,MAmFnBC,EAAUC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4JAUpBC,EAAaH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8JAU7B,UA3F8C,SAAHG,GAKpC,IAJLC,EAAID,EAAJC,KACAC,EAASF,EAATE,UAASC,EAAAH,EACTI,KAAAA,OAAI,IAAAD,EAAGV,EAAcY,MAAKF,EAAAG,EAAAN,EAC1BO,aAAAA,OAAY,IAAAD,GAAOA,EAEbE,GAAQC,EAAAA,EAAAA,MASRC,EAAQN,IAASX,EAAcY,OAASD,IAASX,EAAckB,QAC7DC,EAAcX,EAAdW,SACFC,EAAyB,OAARD,QAAQ,IAARA,OAAQ,EAARA,EAAUE,WAAW,IAAK,OAC3CC,EAAKL,EAAQ,KAAO,IACpBM,EACJZ,IAASX,EAAckB,aAAUM,EAbT,WACnBf,GACHgB,QAAQC,KAAK,+BAEXjB,GACFA,EAAUD,EAEd,EAQA,OACEmB,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACN,GAAIA,EAAIO,EAAE,QAAQC,EAAG,OAAQC,MAAO,CAAEC,IAAKf,EAAQ,OAAS,IAAKgB,SAAA,CACnEzB,EAAK0B,OACNC,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACC,EAAE,MAAMC,EAAE,OAAOP,MAAO,CAAEQ,aAAc,OAAQN,UACjDE,EAAAA,EAAAA,KAACK,EAAAA,GAAG,CACFC,QAASlB,EACTmB,IAAKlC,EAAK0B,MACVS,IAAKnC,EAAKoC,KACVC,GAAG,SACHd,MAAO,CAAEe,OAAQ,eAGlB,MACLnB,EAAAA,EAAAA,MAACoB,EAAAA,GAAG,CAACjB,EAAG,cAAekB,EAAE,SAASjB,MAAO,CAAEC,IAdpB,UAcsCC,SAAA,EAC3DE,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACP,EAAE,SAAQI,UACbE,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CACFC,EAAE,UACFP,EAAE,MACFD,EAAE,SACFE,MAAO,CACLkB,OAAQ,cAAgBzC,EAAK0C,IAAM,QAAU,WAC7CX,aAAc,OACdN,SAEDzB,EAAK0C,KAAMf,EAAAA,EAAAA,KAAClC,EAAO,KAAMkC,EAAAA,EAAAA,KAAC9B,EAAU,QAGvCS,GACAqB,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,EAAE,KAAKf,EAAG,EAAGgB,EAAGtC,EAAMuC,aAAaC,aAAatB,SAAA,MAAAuB,OAAQpC,KAC9D,MAEFe,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CACHM,GAAG,MACHhB,QAASlB,EACTc,EAAG,EACHe,EAAE,KACFC,EAAGtC,EAAMuC,aAAaI,KACtB3B,MAAO,CAAEe,OAAQ,WAAYb,SAE5BzB,EAAKoC,QAERjB,EAAAA,EAAAA,MAACwB,EAAAA,GAAI,CAACd,EAAG,EAAGe,EAAE,KAAKC,EAAGtC,EAAMuC,aAAaK,cAAc1B,SAAA,CAAC,UAC5CzB,EAAKoD,cAKzB,C","sources":["app/components/features/ProductManager/Components/ProductsCard/Food.tsx"],"sourcesContent":["import { IProductFood } from \"app/interfaces\";\nimport styled, { useTheme } from \"styled-components\";\nimport { Box, Col, Img, Row, Text } from \"ui/basic\";\n\nexport enum EItemCardFood {\n  Card = \"card\",\n  Strip = \"strip\",\n  Preview = \"preview\",\n}\nexport interface IItemFoodCard {\n  item: IProductFood;\n  onPreview?: (item: IProductFood) => void;\n  mode?: EItemCardFood;\n  showCategory? : boolean;\n}\n\nconst ItemFoodCard: React.FC<IItemFoodCard> = ({\n  item,\n  onPreview,\n  mode = EItemCardFood.Strip,\n  showCategory= false\n}) => {\n  const theme = useTheme();\n  const handleItemPreview = () => {\n    if (!onPreview) {\n      console.warn(\"No Preview Handler Provided\");\n    }\n    if (onPreview) {\n      onPreview(item);\n    }\n  };\n  const isRow = mode === EItemCardFood.Strip || mode === EItemCardFood.Preview;\n  const { category }  = item;\n  const categoryFormat = category?.replaceAll('/', ' / ');\n  const fd = isRow ? \"rr\" : \"c\";\n  const previewHandler =\n    mode === EItemCardFood.Preview ? undefined : handleItemPreview;\n  const detailsGap = isRow ? \"0.5rem\" : \"0.5rem\";\n  return (\n    <Box fd={fd} a=\"start\" p={\"1rem\"} style={{ gap: isRow ? \"1rem\" : \"\" }}>\n      {item.image ? (\n      <Row w=\"80%\" h=\"7rem\" style={{ borderRadius: \"8px\" }}>\n          <Img\n            onClick={previewHandler}\n            src={item.image}\n            alt={item.name}\n            br=\"0.5rem\"\n            style={{ cursor: \"pointer\" }}\n          />\n      </Row>\n       ) : null}\n      <Col p={\"0.5rem 0 0 \"} j=\"center\" style={{ gap: detailsGap }}>\n        <Row a=\"center\">\n          <Row\n            w=\"initial\"\n            p=\"2px\"\n            a=\"center\"\n            style={{\n              border: \"1px solid \" + (item.veg ? \"green\" : \"#da0828\"),\n              borderRadius: \"3px\",\n            }}\n          >\n            {item.veg ? <VegIcon /> : <NonVegIcon />}\n          </Row>\n        </Row>\n        { showCategory ? \n          <Text s=\"12\" w={6} c={theme.neutralColor.textTertiary}>{`In ${categoryFormat}`}</Text> :\n          null\n        }\n        <Text\n          tt=\"cap\"\n          onClick={previewHandler}\n          w={5}\n          s=\"14\"\n          c={theme.neutralColor.text}\n          style={{ cursor: \"pointer\" }}\n        >\n          {item.name}\n        </Text>\n        <Text w={6} s=\"14\" c={theme.neutralColor.textSecondary}>\n          &#x20B9; {item.price}\n        </Text>\n      </Col>\n    </Box>\n  );\n};\n\nconst VegIcon = styled.div`\n  width: 6px;\n  height: 6px;\n  background: green;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst NonVegIcon = styled.div`\n  width: 6px;\n  height: 6px;\n  background: #da0828;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default ItemFoodCard;\n"],"names":["EItemCardFood","VegIcon","styled","_templateObject","_taggedTemplateLiteral","NonVegIcon","_templateObject2","_ref","item","onPreview","_ref$mode","mode","Strip","_ref$showCategory","showCategory","theme","useTheme","isRow","Preview","category","categoryFormat","replaceAll","fd","previewHandler","undefined","console","warn","_jsxs","Box","a","p","style","gap","children","image","_jsx","Row","w","h","borderRadius","Img","onClick","src","alt","name","br","cursor","Col","j","border","veg","Text","s","c","neutralColor","textTertiary","concat","tt","text","textSecondary","price"],"sourceRoot":""}