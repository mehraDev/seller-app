{"version":3,"file":"static/js/769.74ce10ee.chunk.js","mappings":"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","sources":["app/components/features/Transactions/imageUpload.tsx","app/components/features/Transactions/imageViewer.tsx","app/components/features/Transactions/Transactions.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\nimport { storage } from \"firebaseServices/firebase\";\n\ninterface Props {\n  onSubmit: (imageName: string, imageUrl: string) => void;\n}\n\nconst ImageUploadForm: React.FC<Props> = ({ onSubmit }) => {\n  const [imageName, setImageName] = useState(\"\");\n  const [imageFile, setImageFile] = useState<File | null>(null);\n  const [isUploading, setIsUploading] = useState(false);\n\n  const handleImageNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setImageName(e.target.value);\n  };\n\n  const handleImageFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      setImageFile(e.target.files[0]);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n  \n    if (!imageFile || !imageName) {\n      return;\n    }\n  \n    setIsUploading(true);\n  \n    console.log(\"Creating storage ref...\");\n    const storageRef = ref(storage);\n    console.log(\"storageRef:\", storageRef);\n  \n    const uniqueIdentifier = Date.now().toString();\n    const imageRef = ref(storageRef, `s/food/p/${imageName}-${uniqueIdentifier}`);\n  \n    console.log(\"Uploading image...\");\n    const snapshot = await uploadBytes(imageRef, imageFile);\n    console.log(\"Image uploaded:\", snapshot);\n  \n    const downloadUrl = await getDownloadURL(snapshot.ref);\n  \n    console.log(\"Download URL:\", downloadUrl);\n    onSubmit(`${imageName}-${uniqueIdentifier}`, downloadUrl);\n    setIsUploading(false);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"image-name\">Image Name</label>\n        <input\n          type=\"text\"\n          id=\"image-name\"\n          value={imageName}\n          onChange={handleImageNameChange}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"image-file\">Image File</label>\n        <input type=\"file\" id=\"image-file\" onChange={handleImageFileChange} />\n      </div>\n      <button type=\"submit\" disabled={isUploading}>\n        {isUploading ? \"Uploading...\" : \"Upload\"}\n      </button>\n    </form>\n  );\n};\n\nexport default ImageUploadForm;\n","import { useEffect, useState } from \"react\";\nimport {  ref, listAll, getDownloadURL } from \"firebase/storage\";\nimport { storage } from \"firebaseServices/firebase\";\ninterface Image {\n  name: string;\n  url: string;\n}\n\nconst ImageCollectionViewer: React.FC = () => {\n  const [images, setImages] = useState<Image[]>([]);\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      const imagesRef = ref(storage, \"s/food/p\");\n      const imagesList = await listAll(imagesRef);\n\n      const imagePromises = imagesList.items.map(async (imageRef) => {\n        const name = imageRef.name;\n        const url = await getDownloadURL(imageRef);\n        return { name, url };\n      });\n\n      const images = await Promise.all(imagePromises);\n      setImages(images);\n    };\n\n    fetchImages();\n  }, []);\n\n  return (\n    <div>\n      <h2>Image Collection Viewer</h2>\n      <div>\n        {images.map((image) => (\n          <div key={image.name}>\n            <img src={image.url} alt={image.name} />\n            <div>{image.name}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ImageCollectionViewer;\n","import React from 'react';\nimport ImageUploadForm from './imageUpload';\nimport ImageCollectionViewer from './imageViewer';\n\nconst Transactions = () => {\n  return (\n    <div>\n      <ImageUploadForm onSubmit={(a,b) => console.log(a,b)}/>\n      <ImageCollectionViewer />\n    </div>\n  );\n};\n\nexport default Transactions;\n"],"names":["_ref","onSubmit","_useState","useState","_useState2","_slicedToArray","imageName","setImageName","_useState3","_useState4","imageFile","setImageFile","_useState5","_useState6","isUploading","setIsUploading","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","storageRef","uniqueIdentifier","imageRef","snapshot","downloadUrl","wrap","_context","prev","next","preventDefault","abrupt","console","log","ref","storage","Date","now","toString","concat","uploadBytes","sent","getDownloadURL","stop","_x","apply","arguments","_jsxs","children","_jsx","htmlFor","type","id","value","onChange","target","files","disabled","images","setImages","useEffect","fetchImages","_callee2","imagesRef","imagesList","imagePromises","_context2","listAll","items","map","name","url","Promise","all","image","src","alt","ImageUploadForm","a","b","ImageCollectionViewer"],"sourceRoot":""}