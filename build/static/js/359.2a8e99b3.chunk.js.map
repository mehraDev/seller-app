{"version":3,"file":"static/js/359.2a8e99b3.chunk.js","mappings":"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","sources":["app/components/Dashboard/Header/MobileHeader/OptionsProvider.tsx","app/components/features/ProductManager/Components/ProductsViewer/Shops/supportedProductViewers.ts","ui/Sticky/Sticky.tsx","app/components/features/ProductManager/Components/ProductsViewer/ProductsViewer.tsx","app/components/features/ProductManager/Components/ProductForm/AddProduct.tsx","app/components/features/ProductManager/Components/EmptyProductsCard.tsx","app/components/features/ProductManager/Components/ProductForm/EditProduct.tsx","utils/objectUtils.ts","app/components/features/ProductManager/Components/DrawerPreviewProduct/DrawerPreviewProduct.tsx","app/components/features/ProductManager/Components/ProductsCard/index.ts","app/components/features/ProductManager/Components/ProductsCard/supportedProductCards.ts","app/components/features/ProductManager/Components/ProductsEditor/ProductsListEditable/ProductsListEditable.tsx","app/components/features/ProductManager/Components/ProductsEditor/ProductsEditor.tsx","app/components/features/ProductManager/Components/ProductsEditor/index.ts","app/components/features/ProductManager/ProductManager.tsx","ui/Backdrop/Backdrop.tsx","ui/Card/Card.tsx","ui/Form/Inputs/InputSearch.tsx","ui/OptionsCard/OptionsCard.tsx","ui/Popup/PopupStatus.tsx","ui/Popup/PopupWarning.tsx","ui/Popup/Popup.tsx","ui/Popup/index.ts"],"sourcesContent":["import { createContext, useContext, useState, ReactNode } from \"react\";\n\ninterface OptionsContextType {\n  hasOptionButton: boolean;\n  displayOptions: boolean;\n  setDisplayOptions: (value: boolean) => void;\n  setHasOptionButton: (value: boolean) => void;\n}\n\nconst OptionsContext = createContext<OptionsContextType | undefined>(undefined);\n\nexport const OptionsProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [hasOptionButton, setHasOptionButton] = useState(false);\n  const [displayOptions, setDisplayOptions] = useState(false);\n\n  return (\n    <OptionsContext.Provider\n      value={{\n        hasOptionButton,\n        displayOptions,\n        setDisplayOptions,\n        setHasOptionButton\n      }}\n    >\n      {children}\n    </OptionsContext.Provider>\n  );\n};\n\nexport const useOptionsButton = (): OptionsContextType => {\n  const context = useContext(OptionsContext);\n  if (context === undefined) {\n    throw new Error(\"useOptions must be used within an OptionsProvider\");\n  }\n  return context;\n};\n","import { lazy } from \"react\";\nimport { EShop } from \"app/enums\";\nimport { IViewerBase, IViewerFood } from \"../../../interfaces/viewer\";\n\n// export interface IViewerBase {\n//   item: IProduct;\n//   onPreview?: (item: IProduct) => void;\n//   mode?: string;\n// }\n\nexport type IViewer = IViewerBase | IViewerFood;\n\nconst supportedProductViewers: ISupportedProductCardsType = {\n  [EShop.Food]: lazy(() => import(\"./ViewerFood\")) as React.LazyExoticComponent<React.FC<IViewerFood>>,\n  [EShop.Base]: lazy(() => import(\"./ViewerFood\")) as React.LazyExoticComponent<React.FC<IViewerBase>>,\n};\n\nexport type ISupportedProductCardsType = {\n  [EShop.Food]: React.LazyExoticComponent<React.FC<IViewerFood>>;\n  [EShop.Base]: React.LazyExoticComponent<React.FC<IViewerBase>>;\n};\n\nexport default supportedProductViewers;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Box } from \"ui/basic\";\n\ninterface ISticky {\n  children: React.ReactNode;\n  at: number;\n  stickyStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  parentRef?: React.RefObject<HTMLDivElement>;\n  containerRef?: React.RefObject<HTMLDivElement>;\n  height?: number;\n  onStickyChange?: () => void;\n}\n\nconst Sticky: React.FC<ISticky> = ({\n  children,\n  at,\n  stickyStyle,\n  style,\n  parentRef,\n  containerRef,\n  height,\n  onStickyChange,\n}) => {\n  const [isSticky, setIsSticky] = useState(false);\n  const [, setScrollDirection] = useState<\"up\" | \"down\" | null>(null);\n  const internalRef = useRef<HTMLDivElement>(null);\n  const ref = parentRef || internalRef;\n  const prevScrollY = useRef(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const container = containerRef?.current || window;\n      const currentScrollY =\n        container instanceof Window\n          ? container.scrollY\n          : container.scrollTop || 0;\n      setScrollDirection(prevScrollY.current < currentScrollY ? \"down\" : \"up\");\n      prevScrollY.current = currentScrollY;\n      const newIsSticky = currentScrollY >= at;\n      setIsSticky(newIsSticky);\n      if (newIsSticky !== isSticky && onStickyChange) {\n        onStickyChange();\n      }\n    };\n\n    let cleanup;\n    const currentContainer = containerRef?.current;\n    if (currentContainer) {\n      currentContainer.addEventListener(\"scroll\", handleScroll);\n      cleanup = () => {\n        currentContainer.removeEventListener(\"scroll\", handleScroll);\n      };\n    } else {\n      window.addEventListener(\"scroll\", handleScroll);\n      cleanup = () => {\n        window.removeEventListener(\"scroll\", handleScroll);\n      };\n    }\n\n    return cleanup;\n  }, [at, containerRef, isSticky, onStickyChange]);\n\n  if (height) {\n    return (\n      <Box style={{ minHeight: `${height}px` }} ref={ref}>\n        <Box\n          h={`${height}px`}\n          style={\n            isSticky\n              ? {\n                  ...stickyStyle,\n                }\n              : { ...style }\n          }\n        >\n          {children}\n        </Box>\n      </Box>\n    );\n  }\n  return (\n    <Box\n      ref={ref}\n      style={\n        isSticky\n          ? {\n              ...stickyStyle,\n            }\n          : { ...style }\n      }\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default Sticky;\n","import React, {  useEffect, useRef, useState } from \"react\";\nimport { IProduct } from \"app/interfaces\";\nimport { Col, Row,Text } from \"ui/basic\";\nimport { EShop } from \"app/enums\";\nimport { useTheme } from \"styled-components\";\nimport InputSearch from \"ui/Form/Inputs/InputSearch\";\nimport { addImageUrlsToProducts } from \"../../services\";\nimport {  useSelector } from \"react-redux\";\nimport {  RootState } from \"store/store\";\nimport { LoadingAnimation } from \"ui/LoadingAnimation\";\nimport supportedProductViewers, { IViewer } from \"./Shops/supportedProductViewers\";\nimport { Sticky } from \"ui/Sticky\";\n\nexport interface IProductsViewer {\n  shop: EShop;\n  scrollRef?: React.RefObject<HTMLDivElement>;\n\n}\n\nconst ProductsViewer: React.FC<IProductsViewer> = ({  shop,scrollRef }) => {\n  \n  const { list, isLoading } = useSelector(\n    (state: RootState) => state.products\n  );\n  const viewerRef = useRef<HTMLDivElement>(null);\n  const searchContainerRef = useRef<HTMLDivElement>(null);\n  const absoluteImageProducts: IProduct[] = addImageUrlsToProducts(list,shop);\n  const [searchContainerHeight, setSearchContainerHeight] = useState(0);\n  const [viewerTopPosition, setViewerTopPosition] = useState(0);\n  const theme = useTheme();\n  let Viewer = supportedProductViewers[shop] as React.FC<IViewer>;\n\n  const [preview,setPreview] = useState<IProduct | null>(null)\n  const [searchTerm , setSearchTerm] = useState(\"\");\n\n  const handlePreviewProduct = (prodcut:IProduct | null) => {\n    setPreview(prodcut);\n  }\n  useEffect(() => {\n    if (viewerRef.current) {\n        const topPosition = viewerRef.current.getBoundingClientRect().top;\n        setViewerTopPosition(topPosition - searchContainerHeight + 10);\n    }\n}, [searchContainerHeight]);\nconsole.log('searcehs',viewerTopPosition)\n  useEffect(() => {\n    if (searchContainerRef.current) {\n      const height = searchContainerRef.current.offsetHeight;\n      setSearchContainerHeight(height);\n    }\n  }, []);\n  \n  const handleSearch = (query: string) => {\n    setSearchTerm(query);\n  };\n  const filterProducts = absoluteImageProducts.filter((product) =>\n    product.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n    return (\n  <>\n  <Col p='0 0 7rem' h=\"100%\" style={{overflow: 'scroll'}} ref={viewerRef}>\n    {isLoading ? (\n       <LoadingAnimation/>\n      ) : (\n          <Col style={{gap:'1rem'}}>\n            <Sticky height={searchContainerHeight ? searchContainerHeight : undefined } at={viewerTopPosition} stickyStyle={{position:'fixed',top:0, zIndex:1,boxShadow: theme.shadow.boxShadowTertiary}} containerRef={scrollRef? scrollRef: viewerRef}>\n              <Row ref={searchContainerRef} p='0.5rem 1rem' style={{background:theme.neutralColor.bgContainer}}>\n                <InputSearch placeholder=\"Search in products...\" value={searchTerm} onChange={handleSearch} onClear={() => setSearchTerm('')}/>\n              </Row>\n            </Sticky>\n         {\n          !filterProducts.length\n          ?\n           <Row h='500px' j=\"center\"  p={'2rem 1rem'}><Text c={theme.neutralColor.textSecondary} s='14' w={5}>No Produts Found</Text></Row>\n          :\n           <Viewer products={filterProducts}/>\n         }\n          </Col>\n        )}\n  </Col>\n  </>\n  );\n}\n\nexport default ProductsViewer;\n","import { EShop } from 'app/enums';\nimport { IProduct } from 'app/interfaces';\nimport { generateTimestampId } from 'firebaseServices/Utils';\nimport React, { lazy, Suspense } from 'react';\nimport { useTheme } from 'styled-components';\nimport Icon, { IconName } from 'ui/Icon';\nimport { LoadingAnimation } from 'ui/LoadingAnimation';\nimport { Box, Col, Row,Text } from 'ui/basic';\n\nconst Food = lazy(() => import('../../shops/Food/FormFood'));\n\ninterface IAddProduct {\n  shop: EShop,\n  products: IProduct[],\n  onAddProduct:  (item: IProduct, additionalData: any) => void;\n  onClose: () => void;\n}\nconst AddProduct: React.FC<IAddProduct> = ({ shop ,onClose, products,onAddProduct}) => {\n  const theme = useTheme();\n  let Form: React.ComponentType<any> | null = null;\n  const Error = () => <div>Shop Does'nt have valid Add Product Form...</div>;\n  switch (shop) {\n    case EShop.Food:\n      Form = Food;\n      break;\n    default:\n      break;\n  }\n  const addProductMiddleware = (item: IProduct, additionalData: any) => {\n    const timestampId = generateTimestampId();\n    const newItem: IProduct = {\n        ...item,\n        id: timestampId,\n    };\n    onAddProduct(newItem, additionalData);\n};\n  return (\n    <Col  style={{ background: '#fff',borderRadius:'1rem 1rem 0 0'}} h='100%'>\n      <Row a='center' j='between' style={{borderBottom:'1px solid ' + theme.neutralColor.border}} p={'1rem 1rem'}>\n       <Text  s='16' w={6} c={ theme.neutralColor.text} > Add Product</Text>\n        <Icon height={1.2} width={1.2} name={IconName.Close} color='#bd1414' onClick={() => onClose()}/>\n      </Row >\n      {Form ? (\n        <Suspense fallback={<LoadingAnimation/>}>\n            <Box p={'1rem 1.4rem'} h='100%'style={{ overflow: 'scroll',  }}>\n              <Form  products={products} onSubmit={addProductMiddleware}/>\n            </Box>\n            </Suspense>)\n        :\n          (<Error/>\n        )\n        }\n    </Col>\n  );\n};\n\n\nexport default AddProduct;\n","import React from \"react\";\nimport { useTheme } from \"styled-components\";\nimport Button from \"ui/Button\";\nimport { Col, Text } from \"ui/basic\";\n\ninterface Props {\n  onAddProductClick: () => void;\n}\n\nconst EmptyProductsCard: React.FC<Props> = ({ onAddProductClick }) => {\n  const theme = useTheme();\n  return (\n      <Col a=\"center\" j=\"center\" p={'2rem 0rem'}  style={{ gap:'1rem',background:'#fff',border:'1px solid ' + theme.neutralColor.borderSecondary, boxShadow: theme.shadow.shadow1}} br=\"12px\">\n      <Text c={theme.neutralColor.textSecondary} s='14' w={5}>No Produts Found</Text>\n      <Button onClick={onAddProductClick}>\n        Add Product\n      </Button>\n      </Col>\n  );\n};\n\nexport default EmptyProductsCard;\n\n","import { IProduct } from 'app/interfaces';\nimport React, { lazy, Suspense } from 'react';\nimport { useTheme } from 'styled-components';\nimport Icon, { IconName } from 'ui/Icon';\nimport { LoadingAnimation } from 'ui/LoadingAnimation';\nimport { Box, Col, Row,Text } from 'ui/basic';\n\nconst Food = lazy(() => import('../../shops/Food/FormFood'));\n\ninterface IEditProduct {\n  activeEditProduct?: IProduct | null,\n  products: IProduct[],\n  shop: string,\n  onClose: () => void,\n  onSave:  (item: IProduct, additionalData: any) => void;\n}\n\nconst EditProduct: React.FC<IEditProduct> = ({ shop ,onClose, products,onSave, activeEditProduct}) => {\n  const theme = useTheme();\n  let Form: React.ComponentType<any> | null = null;\n  const Error = () => <div>Shop Does'nt have valid Add Product Form...</div>;\n  switch (shop) {\n    case 'food':\n      Form = Food;\n      break;\n    default:\n      break;\n  }\n  const handleSaveProduct = (item: IProduct, additionalData: any) => {\n    const newItem: IProduct = {\n        ...activeEditProduct,\n        ...item\n    };\n    onSave(newItem, additionalData);\n};\n  return (\n    <Col  style={{ background: '#fff',boxShadow: theme.shadow.boxShadow,borderRadius:'1rem 1rem 0 0'}} h='100%'>\n      <Row a='center' j='between' style={{borderBottom:'1px solid ' + theme.neutralColor.border}} p={'1rem 1rem'}>\n       <Text  s='16' w={7} c={ theme.neutralColor.text} >Edit Product</Text>\n        <Icon height={1.2} width={1.2} name={IconName.Close} onClick={onClose}/>\n      </Row >\n      {Form ? (\n        <Suspense fallback={<LoadingAnimation/>}>\n            <Box p={'1rem 1rem 2rem'} h='100%' style={{overflowY:'scroll'}}>\n              <Form  products={products} onSubmit={handleSaveProduct} editProduct={activeEditProduct}/>\n            </Box>\n            </Suspense>)\n        :\n          (<Error/>\n        )\n        }\n    </Col>\n  );\n};\n\n\nexport default EditProduct;\n","function deepEqual(objA: any, objB: any): boolean {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || typeof objB !== \"object\" || objA === null || objB === null) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  for (const key of keysA) {\n    if (!keysB.includes(key) || !deepEqual(objA[key], objB[key])) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport default deepEqual;\n","import React, { ReactNode } from 'react';\nimport { useTheme } from 'styled-components';\nimport { Drawer } from 'ui/Drawer';\nimport Icon, { IconName } from 'ui/Icon';\nimport { Col, Row } from 'ui/basic';\n\ninterface IDrawerPreviewProduct {\n  isOpen: boolean;\n  onClose: () => void;\n  children: ReactNode;\n}\n\nconst DrawerPreviewProduct: React.FC<IDrawerPreviewProduct> = ({ isOpen, onClose, children }) => {\n  const theme = useTheme();\n\n  return (\n    <Drawer isOpen={isOpen} h=\"100%\">\n      <Row a=\"center\" j=\"center\" p=\"1rem\">\n        <Icon\n          style={{ background: theme.neutralColor.bgSpotlight }}\n          name={IconName.Close}\n          color={theme.neutralColor.bgContainer}\n          padding=\"0.5rem\"\n          onClick={onClose}\n          br=\"4px\"\n        />\n      </Row>\n      <Col p=\"0.75rem\" br=\"6px 6px 0 0\" style={{ background: theme.neutralColor.bgLayout }}>\n        {children}\n      </Col>\n    </Drawer>\n  );\n};\n\nexport default DrawerPreviewProduct;\n","import supportedProductCards from \"./supportedProductCards\";\n\nexport default supportedProductCards;\n","import { lazy } from \"react\";\nimport { IItemFoodCard } from \"./Food\";\nimport { IProduct } from \"app/interfaces\";\nimport { EShop } from \"app/enums\";\n\nexport interface IItemBaseCard {\n  item: IProduct;\n  onPreview?: (item: IProduct) => void;\n  mode?: string;\n}\n\nexport type IItemCard = IItemBaseCard | IItemFoodCard;\n\nconst supportedProductCards: ISupportedProductCardsType = {\n  [EShop.Food]: lazy(() => import(\"./Food\")) as React.LazyExoticComponent<React.FC<IItemFoodCard>>,\n  [EShop.Base]: lazy(() => import(\"./Base\")) as React.LazyExoticComponent<React.FC<IItemBaseCard>>,\n};\n\nexport type ISupportedProductCardsType = {\n  [EShop.Food]: React.LazyExoticComponent<React.FC<IItemFoodCard>>;\n  [EShop.Base]: React.LazyExoticComponent<React.FC<IItemBaseCard>>;\n};\n\nexport default supportedProductCards;\n","import { EShop } from \"app/enums\";\nimport { IProduct } from \"app/interfaces\";\nimport { ELists } from \"../ProductsEditor\";\nimport { useTheme } from \"styled-components\";\nimport { Col, Row,Text } from \"ui/basic\";\nimport supportedProductCards from \"../../ProductsCard\";\nimport Icon, { IconName } from \"ui/Icon\";\nimport { IItemCard } from \"../../ProductsCard/supportedProductCards\";\nimport { useState } from \"react\";\n\ninterface ICardControl {\n    product: IProduct\n  }\n  \ninterface IProductListEditable {\n    handleClearProduct: (product: IProduct,list:ELists) => void;\n    handleEditProduct: (product: IProduct,list:ELists) => void;\n    products: IProduct[];\n    shop: EShop;\n    listTitle: string;\n    listType: ELists;\n    onPreview?: (product: IProduct | null) => void;\n    titleColor?: string\n  }\n  const ProductListEditable: React.FC<IProductListEditable> = ({\n    handleClearProduct,\n    handleEditProduct,\n    products, shop, listTitle,\n    listType,\n    onPreview,\n    titleColor\n  }) => {\n    const [isExpanded,setIsExpanded] = useState(true);\n    const theme = useTheme();\n    const EListsColors = {\n      [ELists.New]: '#34D399',\n      [ELists.Unmodified]: '#fff',\n      [ELists.Modified]: '#FFA500',\n      [ELists.Deleted]: '#FF3B30',\n    };\n    let ProductCard = supportedProductCards[shop] as React.FC<IItemCard>;\n    const handlePreviewProduct = (item: IProduct) => {\n       if(onPreview){\n        onPreview(item)\n       }\n    }\n    \n    const CardControl: React.FC<ICardControl> = ({ product }) => {\n      let controlsComponent: React.ReactNode = null;\n      const theme = useTheme();\n      const editColor = 'rgb(0 86 227)';\n      const deleteColor = 'rgb(191 18 18)';\n      const recoverColor = 'rgb(238 148 0)';\n    \n      switch (listType) {\n        case ELists.New:\n          controlsComponent = (\n            <>\n              <Icon name={IconName.Edit} color={editColor} onClick={() => {handleEditProduct(product,listType)}} />\n              <Icon name={IconName.Delete} color={deleteColor} onClick={() => {handleClearProduct(product,listType)}} />\n            </>\n          );\n          break;\n        case ELists.Modified:\n          controlsComponent = (\n            <>\n              <Icon name={IconName.Edit} color={editColor} onClick={() => {handleEditProduct(product,listType)}} />\n              <Icon name={IconName.Undo} color={editColor} onClick={() => {handleClearProduct(product,listType)}} />\n            </>\n          );\n          break;\n        case ELists.Unmodified:\n          controlsComponent = (\n            <>\n              <Icon name={IconName.Edit} color={editColor} onClick={() => {handleEditProduct(product,listType)}} />\n              <Icon name={IconName.Delete} color={deleteColor} onClick={() => {handleClearProduct(product,listType)}} />\n            </>\n          );\n          break;\n        case ELists.Deleted:\n          controlsComponent = (\n            <>\n              <Icon name={IconName.Recover} color={recoverColor} onClick={() => {handleClearProduct(product,ELists.Deleted)}} />\n            </>\n          );\n          break;\n        default:\n          controlsComponent = null; // Set to null or a default component if listType doesn't match any case\n          break;\n      }\n    \n      return controlsComponent;\n    };\n    \n    if(!products.length){\n      return null;\n    }\n\n    return (\n        <Col \n        ><Row\n        p=\"0.5rem 1rem\"\n        a=\"center\"\n        j=\"between\"\n        h=\"initial\"\n        onClick={() => setIsExpanded(!isExpanded)}\n        style={{\n          fontWeight: 600,\n          fontFamily: \"Raleway\",\n          background: theme.neutralColor.bgContainer,\n          cursor: \"pointer\",\n        }}\n        br=\"6px\"\n      >\n        <Row a=\"end\">\n            <Text w={6} tt=\"cap\" s=\"16\" c={titleColor || theme.neutralColor.text} mr=\"0.5rem\">{listTitle}</Text>\n            <Text w={5} s=\"12\" c={titleColor || theme.neutralColor.textSecondary}>{`( ${products.length} )`}</Text>\n            </Row>\n        <Icon\n          name={IconName.DownArrow}\n          style={{\n            transform: `rotate(${isExpanded ? \"180deg\" : \"0deg\"})`,\n            transformOrigin: \"center\",\n            marginTop: `${isExpanded ? \"4px\" : \"0\"}`,\n            marginBottom: `${isExpanded ? \"0\" : \"4px\"}`,\n          }}\n        />\n        </Row>\n         {isExpanded === true  ? \n         <Col p=\"0.5rem\" style={{ gap: \"0.5rem\" }}>\n            {products.map((product,index) => (\n              <Col\n                key={index}\n                br=\"8px\"\n                style={{\n                  border: `1px solid ${EListsColors[listType]}`,\n                  background: theme.neutralColor.bgContainer,\n                }}\n              >\n                <ProductCard item={product} onPreview={handlePreviewProduct} showCategory={true}/>\n                <Row style={{gap: '0.5rem'}} a=\"center\" j='end' p='0.5rem 1rem'>\n                      <CardControl product={product}/>\n                    </Row>\n              </Col>\n            ))}\n          </Col> : null}\n        </Col>\n      )\n  };\n\n  export default ProductListEditable;","import { IProduct } from \"app/interfaces\";\nimport {  Col, Row,Text } from \"ui/basic\";\nimport Icon, { IconName } from \"ui/Icon\";\nimport { useTheme } from \"styled-components\";\nimport Button from \"ui/Button\";\nimport { Drawer } from \"ui/Drawer\";\nimport AddProduct from \"../ProductForm/AddProduct\";\nimport {  useState } from \"react\";\nimport { EShop } from \"app/enums\";\nimport { Card } from \"ui/Card\";\nimport { Backdrop } from \"ui/Backdrop\";\nimport EmptyProductsCard from \"../EmptyProductsCard\";\nimport EditProduct from \"../ProductForm/EditProduct\";\nimport { deepEqual } from \"utils\";\nimport { addImageUrlsToProducts } from \"../../services\";\nimport DrawerPreviewProduct from \"../DrawerPreviewProduct/DrawerPreviewProduct\";\nimport supportedProductCards from \"../ProductsCard\";\nimport { IItemBaseCard } from \"../ProductsCard/supportedProductCards\";\nimport { LoadingAnimation } from \"ui/LoadingAnimation\";\nimport ProductListEditable from \"./ProductsListEditable/ProductsListEditable\";\nimport { PopupStatus } from \"ui/Popup\";\n\nimport { IAllProducts } from \"../../services/uploadMenu\";\nimport { InputFile } from \"ui/Form\";\nimport { EPopupModes } from \"ui/Popup/PopupStatus\";\nimport InputSearch from \"ui/Form/Inputs/InputSearch\";\nimport PopupWarning from \"ui/Popup/PopupWarning\";\nimport { generateUniqueTimestampId } from \"firebaseServices/Utils/UniqueID\";\nimport { fetchProducts } from \"store/modules/productSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"store/store\";\n\nexport interface IProductsEditor {\n    initialProducts: IProduct[];\n    onClose: () => void\n    shop: EShop;\n    initialMode? : Action;\n    onUpload : (uploadData: IAllProducts) => Promise<boolean>\n}\n\nexport enum Action{\n    Add = 'add',\n    Edit = 'edit',\n    Delete = 'delete',\n    None = 'none'\n}\nexport enum ELists{\n  New = 'New',\n  Unmodified = 'Unchanged',\n  Modified = 'Modified',\n  Deleted = 'Deleted'\n}\n\nconst ProductsEditor : React.FC<IProductsEditor>= ({onClose,onUpload,shop,initialMode = Action.None,initialProducts}) => {\n    const absoluteImageProducts: IProduct[] = addImageUrlsToProducts(initialProducts,shop);\n    const [action,setAction] = useState<Action>(initialMode);\n    const [preview,setPreview] = useState<IProduct | null>(null)\n    const [uploading, setUploading] = useState(false);\n\n    const [unModifiedProducts,setUnmodifiedProducts] = useState<IProduct[]>(absoluteImageProducts);\n    const [newProducts,setNewProducts] = useState<IProduct[]>([]);\n    const [modifiedProducts,setModifiedProducts] = useState<IProduct[]>([]);\n    const [deletedProducts,setDeletedProducts] = useState<IProduct[]>([]);\n    const [ importedProducts,setImportedProducts] = useState<IProduct[]>([]);\n\n    const [uploadStatus, setUploadStatus] = useState<'success' | 'error' | 'none'>('none');\n    const [activeProduct,setActiveProduct] = useState<IProduct | null>(null);\n    const [activeList,setActiveList] = useState<ELists | null>(null);\n    const [query,setQuery] = useState('');\n    const [popupMode , setPopupMode] = useState<EPopupModes>(EPopupModes.None);\n    const [popupMessage , setPopupMessage] = useState('');\n    const [resetPopup,setResetPopup] = useState(false);\n    const [closeEditorPopup,setCloseEditorPopup] = useState(false);\n\n    const hasChanges = newProducts.length || modifiedProducts.length || deletedProducts.length ;\n\n    const theme = useTheme();\n\n    const onCloseEditor = () => {\n      onClose();\n    }\n    const handleCloseEditor = () => {\n      if(hasChanges){\n        setCloseEditorPopup(true)\n      }\n      else onCloseEditor();\n    }\n\n    const handleAddNewItem = (product:IProduct | IProduct) => {\n        setNewProducts([product,...newProducts])\n        setAction(Action.None)\n    }\n\n    const handleEditProductSave = (product:IProduct) => {\n      switch (activeList) {\n          case ELists.Unmodified:\n                if (!deepEqual(product, unModifiedProducts.find(p => p.id === product.id))) {\n                   const updatedUnmodifiedList = unModifiedProducts.filter(p => p.id !== product.id);\n                   const  updatedModifiedProducts = [product, ...modifiedProducts];\n                   setModifiedProducts(updatedModifiedProducts);\n                   setUnmodifiedProducts(updatedUnmodifiedList);\n                }\n          break;\n          case ELists.Modified:\n            if (deepEqual(product, initialProducts.find(p => p.id === product.id))) {\n              const updatedUnmodifiedList = [product,...unModifiedProducts];\n              const updatedModifiedProducts = modifiedProducts.filter(p => p.id !== product.id);\n              setModifiedProducts(updatedModifiedProducts);\n              setUnmodifiedProducts(updatedUnmodifiedList);\n              } else {\n                const updatedModifiedProducts = [product, ...modifiedProducts.filter(p => p.id !== product.id)];\n                setModifiedProducts(updatedModifiedProducts);\n              }\n          break;\n            case ELists.New:\n                  const updatedNewProducts = [ product , ...newProducts.filter(p => p.id !== product.id)];\n                  setNewProducts(updatedNewProducts);\n                break;\n          default:\n            break;\n        };\n        setActiveList(null);\n        setActiveProduct(null)\n        setAction(Action.None);\n    };\n\n    const handleEditProduct = (product: IProduct,list:ELists) => {\n        setAction(Action.Edit);\n        setActiveProduct(product)\n        setActiveList(list);\n    }\n    const handleClearProduct = (product: IProduct, list: ELists) => {\n        setAction(Action.Delete);\n        setActiveProduct(product)\n        setActiveList(list);\n    };\n    const handleClearProductCancel = () => {\n        setAction(Action.None);\n        setActiveProduct(null)\n        setActiveList(null);\n    };\n    const handleClearProductConfirm = () => {\n      if (activeProduct && activeList) {\n        switch (activeList) {\n          case ELists.New:\n            setNewProducts(newProducts.filter((product) => product.id !== activeProduct.id));\n            break;\n          case ELists.Modified:\n            const originalProduct = initialProducts.find((product) => product.id === activeProduct.id);\n            setModifiedProducts(modifiedProducts.filter((product) => product.id !== activeProduct.id));\n            if (originalProduct) {\n              setUnmodifiedProducts([originalProduct,...unModifiedProducts]);\n            }\n            break;\n          case ELists.Unmodified:\n            setUnmodifiedProducts(unModifiedProducts.filter((product) => product.id !== activeProduct.id));\n            setDeletedProducts([activeProduct,...deletedProducts]);\n            break;\n          case ELists.Deleted:\n            setDeletedProducts(deletedProducts.filter((product) => product.id !== activeProduct.id));\n            setUnmodifiedProducts([activeProduct, ...unModifiedProducts]);\n            break;\n          default:\n            break;\n        }\n        setActiveProduct(null);\n        setActiveList(null);\n        setAction(Action.None);\n      }\n    };\n\n    const handleInitialProductAdd = () => {\n        setAction(Action.Add);\n    }\n\n    const handleCloseEditProduct = () => {\n        setAction(Action.None);\n        setActiveProduct(null);\n        setActiveList(null);\n    }\n\n    const handleUpdateProducts = async () => {\n      setUploading(true);\n        try {\n            const finalProducts : IAllProducts = {\n              newProducts,\n              unModifiedProducts,\n              modifiedProducts,\n              deletedProducts,\n              relativeImageProducts : initialProducts,\n              absoluteImageProducts,\n              importedRelativeImageProducts: importedProducts,\n              importedAbsoluteImageProducts: addImageUrlsToProducts(importedProducts,shop)\n            }\n            await onUpload(finalProducts);\n            setUploadStatus('success'); \n        } catch (error) {\n          setUploadStatus('error');\n          console.log('error',error);\n        } finally{\n          setUploading(false);\n        };\n    };\n\n    const handleResetEditorConfirm = () => {\n      setNewProducts([]);\n      setModifiedProducts([]);\n      setDeletedProducts([]);\n      setImportedProducts([]);\n      setUnmodifiedProducts(initialProducts);\n      setResetPopup(false)\n    }\n\n    const handleUploadFromFile = (files: FileList) => {\n      const file = files[0];\n      if (file.name.endsWith('.dbmenu')) {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n          if (event.target) {\n            try {\n              const jsonData = JSON.parse(event.target.result as string);\n              if (jsonData.hasOwnProperty('products')) {\n                const products: IProduct[] = jsonData.products;\n                if(products.length){\n                  const productsWithIds = products.map((product) =>\n                    product.id ? product : { ...product, id: generateUniqueTimestampId() }\n                  );\n                  console.log(productsWithIds);\n                  setImportedProducts((prevProducts) => [...productsWithIds,...prevProducts]);\n                  const importedAbsoluteImageProducts = addImageUrlsToProducts(productsWithIds,shop);\n                  setNewProducts([...importedAbsoluteImageProducts,...newProducts]);\n                  setPopupMode(EPopupModes.Success);\n                  setPopupMessage(`Added ${products.length} products successfully.`);\n                }else{\n                  setPopupMode(EPopupModes.Error);\n                  setPopupMessage('No Products Found');\n                }\n                \n              } else {\n                setPopupMode(EPopupModes.Error);\n                setPopupMessage('No Products Found');\n                console.error('The JSON data does not contain a \"products\" property.');\n              }\n            } catch (error) {\n              console.error('Error parsing JSON data:', error);\n            }\n          } else {\n            console.error('Event target is null.');\n          }\n        };\n        reader.readAsText(file);\n      } else {\n        setPopupMode(EPopupModes.Error);\n        setPopupMessage('Invalid File');\n        console.error('Invalid file extension. Please select a .dbmenu file.');\n      }\n    };\n    const handleClosePopup = () => {\n      setPopupMode(EPopupModes.None);\n      setPopupMessage('');\n    }\n\n    const handleSearch = (q:string) => {\n      setQuery(q);\n    }\n    let ProductCard = supportedProductCards[shop] as React.FC<IItemBaseCard>;\n    const handlePreviewProduct = (prodcut:IProduct | null) => {\n      setPreview(prodcut);\n    };\n\n    const lists = [\n        { listType: ELists.New, products: newProducts, title: \"Recently Added\", titleColor : theme.neutralColor.text },\n        { listType: ELists.Modified, products: modifiedProducts, title: \"Updated Products\",titleColor : theme.neutralColor.text},\n        { listType: ELists.Deleted, products: deletedProducts, title: \"Removed Products\",titleColor : theme.neutralColor.text},\n        { listType: ELists.Unmodified, products: unModifiedProducts, title: \"Existing Products\",titleColor : theme.neutralColor.text }\n      ];\n\n      const filteredLists = lists.map(list => {\n        return {\n          ...list,\n          products: list.products.filter(product => product.name.toLowerCase().includes(query.toLowerCase()))\n        };\n      });\n      const emptySearch = filteredLists.every(list => list.products.length < 1 );\n  const getConfirmationTitleForProductRemoval = () => {\n    if (activeProduct) {\n      switch (activeList) {\n        case ELists.New:\n          return `Remove \"${activeProduct.name}\"?`;\n        case ELists.Modified:\n          return `Discard Changes?`;\n        case ELists.Unmodified:\n          return `Delete \"${activeProduct.name}\"?`;\n        case ELists.Deleted:\n          return `Restore \"${activeProduct.name}\"?`;\n        default:\n          return '';\n      }\n    }\n    return '';\n  };\n  \n  const getConfirmationMessageForProductRemoval = () => {\n    if (activeProduct) {\n      switch (activeList) {\n        case ELists.New:\n          return `Are you sure you want to remove \"${activeProduct.name}\" from the New Products?`;\n        case ELists.Modified:\n          return `Are you sure you want to discard changes to \"${activeProduct.name}\"?`;\n        case ELists.Unmodified:\n          return `Are you sure you want to delete \"${activeProduct.name}\" ?`;\n        case ELists.Deleted:\n          return `Are you sure you want to restore \"${activeProduct.name}\" ?`;\n        default:\n          return '';\n      }\n    }\n    return '';\n  };\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  const handleCloseUploadStatusPopup = () => {\n    if(uploadStatus === 'success'){\n      dispatch(fetchProducts());\n      onClose();\n    }\n    setUploadStatus('none');\n  }\n  const ActiveAction =  (action === Action.Add\n                          ? \n                            <AddProduct shop={shop} onClose={() => setAction(Action.None) }\n                            products={[...newProducts,...unModifiedProducts,...modifiedProducts]}\n                            onAddProduct={handleAddNewItem}/>\n                          :\n                          action === Action.Edit\n                          ?\n                            <EditProduct\n                            onSave={handleEditProductSave}\n                            activeEditProduct={activeProduct}\n                            shop={shop}\n                            onClose={handleCloseEditProduct }\n                            products={[...newProducts,...unModifiedProducts,...modifiedProducts]}/>\n                          :\n                          null\n      );\n\n  const noProducts = !newProducts.length &&  !unModifiedProducts.length && !modifiedProducts.length && !deletedProducts.length;\n\n  return (\n    <Col h=\"100%\" style={{background:theme.neutralColor.fillQuaternary,borderBottom: `1px solid ${theme.neutralColor.borderSecondary}`}}>\n      <Col style={{boxShadow:theme.shadow.shadow1, background: theme.neutralColor.bgContainer,borderBottom: `1px solid ${theme.neutralColor.borderSecondary}`}}>\n        <Row a=\"center\" w=\"inherit\" p='1rem 0.5rem 0' >\n          <Row a='center'>\n            <Icon height={1.5} color={theme.brandColor.red} width={1.5} name={IconName.Close} onClick={handleCloseEditor} />\n            <Text w={7} s='18'  ml=\"0.5rem\" c={theme.neutralColor.text}>Products Editor</Text>\n          </Row>\n          <Row w=\"initial\" a='center' style={{gap:'1rem'}} p='0 1rem'>\n            {hasChanges ?\n            <Button padding=\"2px 4px\" size=\"small\"  variant=\"secondary\" onClick={() => setResetPopup(true)}>Reset</Button>\n            : \n            null}\n            <InputFile\n              variant=\"secondary\"\n              accept=\".dbmenu\"\n              size=\"small\" padding=\"2px 6px\"\n              label=\"Import\" onFileChange={handleUploadFromFile} />\n          </Row>\n        </Row>\n        <Row p={'0.5rem 1rem' }>\n          <InputSearch value={query} onChange={handleSearch} onClear={() => setQuery('')} placeholder={'Search...'}/>\n        </Row>\n      </Col>\n      <Col h=\"100%\" style={{overflow:'scroll'}}>\n      <Col  p=\"1rem 0.5rem 12rem\"\n        style={{\n          background: theme.neutralColor.bgLayout,\n          gap:'1rem'\n        }}>\n          { noProducts ?\n            <EmptyProductsCard onAddProductClick={handleInitialProductAdd}/> :\n              <>\n              {!emptySearch ? filteredLists.map(({ listType, products, title, titleColor = '' }) => (\n                  <ProductListEditable\n                    handleClearProduct={handleClearProduct}\n                    handleEditProduct={ handleEditProduct}\n                    key={`${listType} ${query}`}\n                    listType={listType}\n                    products={products}\n                    shop={shop}\n                    listTitle={title}\n                    onPreview={handlePreviewProduct}\n                    titleColor={titleColor}\n                  />\n                ))\n                :\n                <Row a='center' j=\"center\"  p={'2rem 1rem'}><Text c={theme.neutralColor.textSecondary} s='14' w={5}>No Produts Found</Text></Row>\n              }\n                </>\n            }\n        </Col>\n       </Col>\n      <Row a=\"center\" j=\"between\" p='1rem' style={{gap:'1rem',position:'absolute',bottom: '0',borderTop: '1px solid '+ theme.neutralColor.border,background:theme.neutralColor.bgContainer}}>\n                <Button padding=\"0.75rem\" size=\"medium\" onClick={() => setAction(Action.Add)} width=\"50%\">Add Product</Button>\n                <Button  padding=\"0.75rem\" size=\"medium\" disabled={!hasChanges} width=\"50%\" onClick={handleUpdateProducts}>Update</Button>\n      </Row> \n          <Drawer isOpen={action === Action.Add || action === Action.Edit}>\n            {ActiveAction}\n          </Drawer>\n          \n          <DrawerPreviewProduct isOpen={preview ? true : false} onClose={() => setPreview(null)}>\n            {preview && <ProductCard item={preview} mode=\"p\"/>}\n          </DrawerPreviewProduct>\n          <PopupWarning\n            show={action === Action.Delete}\n            title={getConfirmationTitleForProductRemoval()}  message={getConfirmationMessageForProductRemoval()}\n            onCancel={handleClearProductCancel}\n            onConfirm={handleClearProductConfirm} />\n          <PopupWarning\n            show={resetPopup}\n            title={'Reset all ?'}  message={`Are you sure you want to discard all changes?`}\n            onCancel={() => setResetPopup(false)}\n            onConfirm={handleResetEditorConfirm} />\n          <PopupWarning\n            show={closeEditorPopup}\n            title={'Discard Unsaved Changes?'}  message={`You have unsaved changes. Are you sure you want to close the editor and discard all changes?`}\n            onCancel={() => setCloseEditorPopup(false)}\n            onConfirm={onCloseEditor} />\n        {uploading && (\n        <Backdrop>\n          <LoadingAnimation/>\n        </Backdrop>\n        )}\n        <PopupStatus mode={popupMode} onClose={handleClosePopup} message={popupMessage}/>\n        <PopupStatus\n          mode={uploadStatus !== 'none' ? uploadStatus === 'success' ? EPopupModes.Success : EPopupModes.Error : EPopupModes.None}\n          onClose={handleCloseUploadStatusPopup}\n          message={uploadStatus === 'success' ? `Products added successfully.` : `Something went wrong.`}/>\n    </Col>\n    )\n  };\n\n \n\n  export default ProductsEditor;\n\n\n\n","import ProductsEditor from \"./ProductsEditor\";\n\nexport default ProductsEditor;\n","import React, { useState, useEffect } from 'react';\nimport LoadingAnimation from 'ui/LoadingAnimation/LoadingAnimation';\nimport styled, { useTheme } from 'styled-components';\nimport {  uploadMenu } from './services';\nimport { IProduct } from 'app/interfaces';\nimport { useOptionsButton } from 'app/components/Dashboard';\nimport { OptionsCard } from 'ui/OptionsCard';\nimport ProductsEditor from './Components/ProductsEditor';\nimport ProductsViewer from './Components/ProductsViewer/ProductsViewer';\nimport { EShop } from 'app/enums';\nimport { Action } from './Components/ProductsEditor/ProductsEditor';\nimport Icon, { IconName } from 'ui/Icon';\nimport { IAllProducts } from './services/uploadMenu';\nimport { Drawer } from 'ui/Drawer';\nimport { Row } from 'ui/basic';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'store/store';\n\nenum Mode {\n  Viewer = 'viewer',\n  Editor = 'edit'\n}\n\n\nconst ProductManager: React.FC = () => {\n  const theme = useTheme();\n  const shop: EShop = EShop.Food;\n  const {setDisplayOptions,displayOptions,setHasOptionButton} = useOptionsButton();\n  const [preview,setPreview] = useState<IProduct | null>(null);\n\n  const [mode, setMode] = useState<Mode>(Mode.Viewer);\n  const { list: products, isLoading } = useSelector(\n    (state: RootState) => state.products\n  );\n \n  const handleInitialAddProduct = () => {\n    setMode(Mode.Editor);\n  }\n  const handleUploadProducts = async (uploadData: IAllProducts) => {\n    try {\n      return await uploadMenu(uploadData);\n    } catch (error) {\n      throw(error);\n    }\n  };\n  \n  useEffect(() => {\n    setHasOptionButton(true);\n    return () => {\n      setHasOptionButton(false);\n    };\n\n  }, [ setHasOptionButton]);\n\nif (isLoading) {\n    return <LoadingAnimation/>\n  }\n  \n  const options = [\n    { label: !products.length ? 'Add Products' : 'Edit Products', onClick : handleInitialAddProduct  }\n  ];\n\n  const displayAddProductFormInitially = !products.length;\n  \n  return (\n    <>\n      {mode === Mode.Viewer ? (\n        <>\n          <ProductsViewer shop={EShop.Food}/>\n          <Row w='initial' style={{\n              background: theme.brandColor.primary,\n              boxShadow:theme.shadow.shadow1,\n              position:'absolute', bottom:'1rem',right:'1rem'\n\n            }}\n            br='12px'>\n          <Icon name={IconName.Edit} \n            clickEffectTime={100}\n            onClick={() => setMode(Mode.Editor)}\n             padding='1rem'\n            color={theme.neutralColor.bgContainer}\n            height={1.5}\n            br='12px'\n            width={1.5}\n          />\n          </Row>\n        </>\n        )\n        :\n        <Drawer isOpen={mode === Mode.Editor} h='100%' bg={theme.neutralColor.bgContainer}>\n          <ProductsEditor\n            onUpload={handleUploadProducts}\n            initialMode={displayAddProductFormInitially ? Action.Add : Action.None }\n            initialProducts={products}\n            onClose={() => setMode(Mode.Viewer)}\n            shop={shop}\n            />\n        </Drawer>\n      }\n      {displayOptions &&\n        <OptionsCard options={options} closeCard={() => setDisplayOptions(false)}/>\n      }\n    </>\n  );\n};\n\nexport const ControlsWrapper = styled.div`\n  width: 100%;\n`;\nexport const OptionIcon = styled.div`\n  \n`;\nexport const OptionsWrapper = styled.div`\n   right: 8px;\n    top: -3rem;\n    align-items: end;\n    display: flex;\n    flex-direction: column;\n    z-index: 3;\n    position: absolute;\n    width: 70%;\n`;\nexport const OptionsList = styled.ul`\n  margin-right: 0.75rem;\n  margin-top: 0.5rem;\n  border-radius: 8px;\n  padding: 1rem 0;\n  width: 100%;\n  background: white;\n  box-shadow: ${({theme}) => theme.shadow.boxShadowSecondary};\n  box-shadow: ${({theme}) => theme.neutralColor.border};\n  li {\n    padding: 0.5rem;\n    transition: background-color 0.3s ease;\n\n    &:hover,\n    &:active {\n      background-color: lightgray;\n    }\n  }\n\n`\nexport default ProductManager;\n","import { ReactNode } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport { Box, Col } from \"ui/basic\";\n\ninterface IBackdrop {\n  onClose?: () => void;\n  children: ReactNode;\n}\n\nconst Backdrop: React.FC<IBackdrop> = ({ onClose, children }) => {\n  const theme = useTheme();\n\n  return (\n    <Wrapper style={{ background: theme.neutralColor.bgMask }}>\n      <Col\n        h=\"100%\"\n        j=\"center\"\n        a=\"center\"\n        style={{\n          position: \"relative\",\n        }}\n      >\n        {children}\n      </Col>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(Box)`\n  width: 100%;\n  position: fixed;\n  height: 100%;\n  top: 0;\n  left:0;\n  z-index: 9;\n`;\n\nexport default Backdrop;\n","import styled from \"styled-components\";\nimport { Col } from \"ui/basic\";\n\nconst Card = styled(Col)`\nborder-radius: 6px;\nbox-shadow: ${({theme}) => theme.shadow.boxShadow};\nbackground: ${({theme}) => theme.neutralColor.bgContainer};;\n`\n\nexport default Card;\n\n","import React, { ChangeEvent, useState } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport { InputWrapper, Label } from \"./styles\";\nimport { IInput } from \"./interface\";\nimport Error from \"ui/Error\";\nimport Icon, { IconName } from \"ui/Icon\";\nimport { Row } from \"ui/basic\";\n\ninterface IInputSearch extends IInput {\n  value: string;\n  onChange: (value: string) => void;\n  borderColor?: string | undefined;\n  borderRadius?: string;\n  error?: string;\n  onClear: () => void;\n}\n\nconst Input = styled.input<{\n  hasValue: boolean;\n  borderColor: string;\n  borderRadius?: string;\n  isInputFocused: boolean;\n}>`\n  color: ${({ theme }) => theme.neutralColor.text};\n  font-weight: 400;\n  border-width: 1px;\n  padding: 8px 0px 8px 28px;\n  font-size: 16px;\n  width: 100%;\n  position: relative;\n  border-color: ${({ theme }) => theme.neutralColor.border};\n  border-radius: ${({ borderRadius }) => borderRadius || \"9px\"};\n  border-style: solid;\n  outline: none;\n  transition: border-color 0.3s ease;\n  &:focus {\n    border-color: ${({ borderColor, theme }) =>\n      borderColor ? borderColor : theme.neutralColor.border};\n    outline: none;\n  }\n`;\n\nconst InputSearch: React.FC<IInputSearch> = ({\n  label,\n  value,\n  onChange,\n  placeholder,\n  required,\n  labelTop = true,\n  borderColor = \"\",\n  borderRadius,\n  error,\n  onClear,\n}) => {\n  const [isInputFocused, setIsInputFocused] = useState(false);\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onChange(event.target.value);\n  };\n\n  const handleInputFocus = () => {\n    setIsInputFocused(true);\n  };\n\n  const handleInputBlur = () => {\n    setIsInputFocused(false);\n  };\n\n  const handleClearSearch = () => {\n    onClear();\n  };\n  const theme = useTheme();\n  return (\n    <InputWrapper top={labelTop}>\n      {label && (\n        <Label top={labelTop}>\n          {label}\n          {required && \"*\"}\n        </Label>\n      )}\n      <Row a=\"center\" style={{ position: \"relative\" }} j=\"center\">\n        <Input\n          type=\"text\"\n          value={value}\n          onChange={handleInputChange}\n          onFocus={handleInputFocus}\n          onBlur={handleInputBlur}\n          placeholder={placeholder}\n          hasValue={value !== \"\"}\n          required={required}\n          borderColor={borderColor}\n          borderRadius={borderRadius}\n          isInputFocused={isInputFocused} // Pass the isInputFocused state as a prop\n        />\n        {value !== \"\" && (\n          <ClearIcon\n            name={IconName.Clear}\n            height={0.6}\n            width={0.6}\n            color={theme.neutralColor.bgContainer}\n            onClick={handleClearSearch}\n            style={{ background: theme.neutralColor.border }}\n          />\n        )}\n        <SearchIcon\n          borderRadius={0}\n          name={IconName.Search}\n          color={\n            isInputFocused\n              ? theme.brandColor.primaryActive\n              : theme.neutralColor.border\n          }\n        />\n      </Row>\n      {error && <Error>{error}</Error>}\n    </InputWrapper>\n  );\n};\n\nconst SearchIcon = styled(Icon)`\n  position: absolute;\n  left: 4px; /* Adjust the left position to move the search icon to the start */\n  top: 50%; /* Center vertically */\n  transform: translateY(-50%);\n`;\n\nconst ClearIcon = styled(Icon)`\n  position: absolute;\n  right: 10px; /* Adjust the right position to move the clear icon to the end */\n  top: 50%; /* Center vertically */\n  transform: translateY(-50%);\n`;\nexport default InputSearch;\n","import React from 'react';\nimport { Backdrop } from 'ui/Backdrop';\nimport Button from 'ui/Button';\nimport { Card } from 'ui/Card';\nimport Icon, { IconName } from 'ui/Icon';\nimport { Col, Row } from 'ui/basic';\n\ninterface IOptionCard {\n  label: string;\n  onClick: () => void;\n}\n\nconst OptionsCard: React.FC<{ options: IOptionCard[],closeCard: () => void; }> = ({ options,closeCard }) => {\n    const handleOptionClick = (index: number) => {\n        closeCard();\n        options[index].onClick()\n    }\n  return (\n    <Backdrop>\n        <Card w='90%'>\n\n      <Row j='end'>\n      <Icon height={1.2} width={1.2} name={IconName.Close} onClick={() => closeCard()}/>\n      </Row>\n      <Col>\n        {options.map((option, index) => (\n          <Row key={index} p={'0.75rem 1.5rem'}>\n            <Button variant='secondary' width='100%' onClick={() => handleOptionClick(index)}>{option.label}</Button>\n          </Row>\n        ))}\n      </Col>\n\n        </Card>\n    \n    </Backdrop>\n    \n  );\n};\n\nexport default OptionsCard;\n","import React from \"react\";\nimport { useTheme } from \"styled-components\";\nimport { Backdrop } from \"ui/Backdrop\";\nimport { Row, Text, Col } from \"ui/basic\";\nimport Button from \"ui/Button\";\nimport Icon, { IconName } from \"ui/Icon\";\n\ninterface IPopupStatus {\n  mode: EPopupModes\n  onClose: () => void;\n  message? : string;\n}\nexport enum EPopupModes {\n  None = 'none',\n  Success = 'success',\n  Error = 'error',\n}\n\nconst PopupStatus: React.FC<IPopupStatus> = ({ mode, onClose,message }) => {\n    const theme = useTheme();\n    const isSuccess = mode === EPopupModes.Success;\n    const successColor = '#38a81c';\n    const errorColor = theme.errorColor.error;\n    const errorMessageBg = theme.errorColor.errorBorder;\n    const successMessageBg = '#b0eea1';\n  return mode !== EPopupModes.None ? (\n    <Backdrop>\n    <Col br=\"8px\" w=\"80%\" style={{ gap: '2rem', padding: '1.5rem 1rem' , background: theme.neutralColor.bgContainer }} a=\"center\">\n      <Icon style={{background: isSuccess ? successColor :  errorColor}}\n        name={isSuccess ? IconName.Check :  IconName.Xmark}\n        color='#fff'  padding=\"6px\" br='50%'  width={5} height={5}/>\n        <Text tt=\"cap\" s=\"18\" w={6} c={theme.neutralColor.text}>\n                {isSuccess ? 'Success' : 'Error' }\n              </Text>\n              {message && (\n            <Row a=\"center\" j=\"center\" p={'1rem'} style={{background: isSuccess ? successMessageBg : errorMessageBg}} br=\"8px\">\n              <Text tt=\"cap\" s=\"12\" c={isSuccess ? successColor : errorColor}>\n                {message}\n              </Text>\n            </Row>\n          )}\n     <Row a=\"center\" j=\"center\" style={{gap:'1rem'}}>\n        <Button  width=\"50%\" onClick={onClose}\n        bg={isSuccess ? '#4CBB17' : theme.errorColor.error}\n        >\n        {isSuccess ? 'Done' : 'Close'}\n            </Button>\n     </Row>\n    </Col>\n  </Backdrop>\n  ) : null;\n};\n\nexport default PopupStatus;\n","import { FC } from \"react\";\nimport { useTheme } from \"styled-components\";\nimport { Backdrop } from \"ui/Backdrop\";\nimport Button from \"ui/Button\";\nimport { Card } from \"ui/Card\";\nimport { Col, Row, Text } from \"ui/basic\";\n\ninterface IPopupWarning {\n  title?: string;\n  message?: string;\n  label?: string;\n  onCancel: () => void;\n  onConfirm: () => void;\n  show?: boolean;\n}\n\nconst PopupWarning: FC<IPopupWarning> = ({\n  title,\n  message,\n  label,\n  onCancel,\n  onConfirm,\n  show = true,\n}) => {\n  const theme = useTheme();\n\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <Backdrop>\n      <Card w=\"80%\" p={'1rem'}>\n        <Col style={{ gap: \"0.5rem\" }}>\n          {title && (\n            <Row p={'1rem 0rem'}>\n              <Text s=\"16\" w={6} c={theme.neutralColor.text}>\n                {title}\n              </Text>\n            </Row>\n          )}\n          {message && (\n            <Row p={'1rem'} style={{background:theme.errorColor.errorBorder}} br=\"8px\">\n              <Text s=\"12\" c={theme.errorColor.errorTextActive}>\n                {message}\n              </Text>\n            </Row>\n          )}\n          <Row p={'1rem 0rem'}  a=\"center\" j=\"end\">\n            <Row w=\"60%\" style={{gap: '2rem'}} j=\"end\" a='center'>\n                <Button color={theme.errorColor.errorTextActive} variant=\"secondary\" onClick={onCancel}>\n                    Cancel\n                </Button>\n                <Button bg={theme.errorColor.errorTextActive} onClick={onConfirm}>{label || \"Confirm\"}</Button>\n            </Row>\n          </Row>\n        </Col>\n      </Card>\n    </Backdrop>\n  );\n};\n\nexport default PopupWarning;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IPopupProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  isOpen: boolean;\n  title: string\n}\n\nconst Popup: React.FC<IPopupProps> = ({ onClose, children ,isOpen,title}) => {\n    if (!isOpen) {\n        return null;\n      }\n  return (\n    <Overlay>\n      <PopupContainer>\n        <Header>\n          <Title>{title}</Title>\n          <CloseButton onClick={onClose}>X</CloseButton>\n        </Header>\n        <Content>{children}</Content>\n      </PopupContainer>\n    </Overlay>\n  );\n};\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5); /* Adjust the transparency as needed */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst PopupContainer = styled.div`\n  background-color: white;\n  padding: 1rem;\n  border-radius: 6px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n`;\n\nconst Title = styled.h3`\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 20px;\n`;\n\nconst Content = styled.div`\n  /* Add any additional styling for the content */\n`;\n\nexport default Popup;\n","import Popup from \"./Popup\";\nimport ConfirmationPopup from \"./PopupConfirmation\";\nimport PopupStatus from \"./PopupStatus\";\n\nexport default Popup;\nexport { ConfirmationPopup, PopupStatus };\n"],"names":["OptionsContext","createContext","undefined","OptionsProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","hasOptionButton","setHasOptionButton","_useState3","_useState4","displayOptions","setDisplayOptions","_jsx","Provider","value","useOptionsButton","context","useContext","Error","_supportedProductView","_defineProperty","EShop","lazy","at","stickyStyle","style","parentRef","containerRef","height","onStickyChange","isSticky","setIsSticky","setScrollDirection","internalRef","useRef","ref","prevScrollY","useEffect","cleanup","handleScroll","container","current","window","currentScrollY","Window","scrollY","scrollTop","newIsSticky","currentContainer","addEventListener","removeEventListener","Box","minHeight","concat","h","_objectSpread","shop","scrollRef","_useSelector","useSelector","state","products","list","isLoading","viewerRef","searchContainerRef","absoluteImageProducts","addImageUrlsToProducts","searchContainerHeight","setSearchContainerHeight","viewerTopPosition","setViewerTopPosition","theme","useTheme","Viewer","supportedProductViewers","_useState5","_useState6","_useState7","_useState8","searchTerm","setSearchTerm","topPosition","getBoundingClientRect","top","console","log","offsetHeight","filterProducts","filter","product","name","toLowerCase","includes","_Fragment","Col","p","overflow","LoadingAnimation","_jsxs","gap","Sticky","position","zIndex","boxShadow","shadow","boxShadowTertiary","Row","background","neutralColor","bgContainer","InputSearch","placeholder","onChange","query","onClear","length","j","Text","c","textSecondary","s","w","Food","onClose","onAddProduct","Form","borderRadius","a","borderBottom","border","text","Icon","width","IconName","color","onClick","Suspense","fallback","onSubmit","item","additionalData","timestampId","generateTimestampId","newItem","id","onAddProductClick","borderSecondary","shadow1","br","Button","onSave","activeEditProduct","overflowY","editProduct","deepEqual","objA","objB","keysA","Object","keys","keysB","_i","_keysA","key","isOpen","Drawer","bgSpotlight","padding","bgLayout","_supportedProductCard","_EListsColors","handleClearProduct","handleEditProduct","listTitle","listType","onPreview","titleColor","isExpanded","setIsExpanded","EListsColors","ELists","New","Unmodified","Modified","Deleted","ProductCard","supportedProductCards","handlePreviewProduct","CardControl","_ref2","controlsComponent","editColor","deleteColor","fontWeight","fontFamily","cursor","tt","mr","transform","transformOrigin","marginTop","marginBottom","map","index","showCategory","Action","onUpload","_ref$initialMode","initialMode","None","initialProducts","action","setAction","preview","setPreview","uploading","setUploading","unModifiedProducts","setUnmodifiedProducts","_useState9","_useState10","newProducts","setNewProducts","_useState11","_useState12","modifiedProducts","setModifiedProducts","_useState13","_useState14","deletedProducts","setDeletedProducts","_useState15","_useState16","importedProducts","setImportedProducts","_useState17","_useState18","uploadStatus","setUploadStatus","_useState19","_useState20","activeProduct","setActiveProduct","_useState21","_useState22","activeList","setActiveList","_useState23","_useState24","setQuery","_useState25","EPopupModes","_useState26","popupMode","setPopupMode","_useState27","_useState28","popupMessage","setPopupMessage","_useState29","_useState30","resetPopup","setResetPopup","_useState31","_useState32","closeEditorPopup","setCloseEditorPopup","hasChanges","onCloseEditor","Edit","Delete","handleUpdateProducts","_asyncToGenerator","_regeneratorRuntime","mark","_callee","finalProducts","wrap","_context","prev","next","relativeImageProducts","importedRelativeImageProducts","importedAbsoluteImageProducts","t0","finish","stop","apply","arguments","prodcut","filteredLists","title","emptySearch","every","dispatch","useDispatch","ActiveAction","Add","AddProduct","_toConsumableArray","EditProduct","find","updatedUnmodifiedList","updatedModifiedProducts","updatedNewProducts","noProducts","fillQuaternary","brandColor","red","ml","size","variant","InputFile","accept","label","onFileChange","files","file","endsWith","reader","FileReader","onload","event","target","jsonData","JSON","parse","result","hasOwnProperty","productsWithIds","generateUniqueTimestampId","prevProducts","error","readAsText","q","EmptyProductsCard","_ref3","_ref3$titleColor","ProductListEditable","bottom","borderTop","disabled","DrawerPreviewProduct","mode","PopupWarning","show","getConfirmationTitleForProductRemoval","message","getConfirmationMessageForProductRemoval","onCancel","onConfirm","originalProduct","Backdrop","PopupStatus","fetchProducts","Mode","ControlsWrapper","styled","_templateObject","_taggedTemplateLiteral","OptionIcon","_templateObject2","OptionsWrapper","_templateObject3","OptionsList","_templateObject4","boxShadowSecondary","_useOptionsButton","setMode","handleUploadProducts","uploadData","uploadMenu","abrupt","sent","_x","options","Editor","displayAddProductFormInitially","ProductsViewer","primary","right","clickEffectTime","bg","ProductsEditor","OptionsCard","closeCard","Wrapper","bgMask","Input","_ref4","borderColor","SearchIcon","ClearIcon","_ref5","required","_ref5$labelTop","labelTop","_ref5$borderColor","isInputFocused","setIsInputFocused","InputWrapper","Label","type","onFocus","onBlur","hasValue","primaryActive","Card","option","handleOptionClick","isSuccess","Success","successColor","errorColor","errorMessageBg","errorBorder","_ref$show","errorTextActive","Overlay","PopupContainer","Header","Title","CloseButton","_templateObject5","Content","_templateObject6"],"sourceRoot":""}