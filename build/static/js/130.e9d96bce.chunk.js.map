{"version":3,"file":"static/js/130.e9d96bce.chunk.js","mappings":"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","sources":["ui/Utils/Media/media.ts","app/components/Dashboard/SideNav/styles.tsx","ui/Logo/Logo.tsx","ui/Logo/LogoSideNav.tsx","ui/Logo/index.ts","app/components/Dashboard/SideNav/SideNav.tsx","app/components/Dashboard/Body/styles.tsx","app/components/Utils/LazyComponentWrapper.tsx","app/components/Dashboard/Body/DashboardBody.tsx","app/components/Dashboard/Header/MobileHeader/MobileHeader.tsx","app/components/Dashboard/Header/MobileHeader/index.ts","utils/sessionStorageManager.ts","app/components/Dashboard/Dashboard.tsx","app/components/Dashboard/Header/MobileHeader/OptionsProvider.tsx"],"sourcesContent":["const media = {\n    desktop: `@media (min-width: 991px)`,\n    tablet: `@media (min-width: 481px) and (max-width: 991px)`,\n    mobile: `@media (max-width: 480px)`\n  };\n  \nexport default media;\n  ","import styled, { keyframes } from \"styled-components\"\nimport media from \"ui/Utils/Media/media\";\n\n\n\n\n\ninterface SideNavListWrapperProps{\n  expanded?: boolean\n}\nexport const SideNavListWrapper = styled.nav<SideNavListWrapperProps>`\n    padding: ${({expanded}) => expanded ? '0 1rem': '0 0.25rem'};\n    ${media.desktop}{\n      padding: ${({expanded}) => expanded ? '0 1rem': '0 0.5rem'};\n    }\n`\n\nexport const SideNavItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  text-decoration: none;\n  cursor: pointer;\n  color: #ffffffcc;\n  border-radius: 0.25rem;\n  padding: .5rem 1.25rem;\n  transition: all 0.2s ease-in-out;\n  width: 100%;\n  &:hover {\n    background-color: #e6f7ff31;\n  }\n\n  &.active {\n    background-color: #007aea;\n    color: rgba(255, 255, 255, 1);\n    font-weight: bold;\n  }\n`\ninterface SideNavLabelProps {\n  show: boolean;\n}\n\nexport const SideNavLabel = styled.span<SideNavLabelProps>`\n  display: ${({show}) => show  ? 'flex' : 'none'};\n  margin-left: 1.5rem;\n`\n\ninterface SideNavAccountLabelProps {\n  show: boolean;\n}\n\nexport const SideNavAccountLabel = styled.span<SideNavAccountLabelProps>`\n  display: ${({show}) => show  ? 'flex' : 'none'};\n  margin-left: 1rem;\n  margin-right: 0.5rem;\n  text-transform: capitalize;\n`\nexport const ToggleButton = styled.button`\n    padding: 0.5rem;\n    position: absolute;\n    border: none;\n    border-radius: 8px;\n    cursor: pointer;\n    display: flex;\n    -webkit-box-pack: center;\n    justify-content: center;\n    -webkit-box-align: center;\n    align-items: center;\n    background: none;\n    bottom: 2rem;\n    right: 1rem;\n\n  &:hover {\n    background-color: rgb(0, 122, 234);\n    & > svg {\n            opacity: 1;\n        }\n  }\n  & > svg {\n        opacity: 0.8;\n    }\n`\nexport const Button = styled.div`\n  padding: 0.5rem;\n  border: none;\n    border-radius: 8px;\n    cursor: pointer;\n    display: flex;\n    -webkit-box-pack: center;\n    justify-content: center;\n    -webkit-box-align: center;\n    align-items: center;\n    background: none;\n    &:hover {\n    background-color: rgb(0, 122, 234);\n    & > svg {\n            opacity: 1;\n        }\n  }\n  & > svg {\n        opacity: 0.8;\n    }\n`;\nexport const SettingButton = styled(Button)`\n  padding: 0.5rem;\n  position: relative;\n  margin-bottom: 0.5rem;\n`\n\ninterface AccountWrapperProps {\n  expanded: boolean;\n}\n\nexport const SettingPopupWrapepr = styled.div`\n     position: absolute;\n  bottom: 0rem;\n  left: 2rem;\n  z-index: 99999;\n  background: ${({theme}) => theme.neutralColor.bgElevated};\n  width: 12rem;\n  padding: 1rem;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  color: ${({theme}) => theme.neutralColor.textSecondary};\n\n  /* Optional: Add transition for animation */\n  transition: opacity 0.2s ease-in-out;\n\n  /* Optional: Adjust the placement of the arrow */\n  ::before {\n    content: '';\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    border: 6px solid transparent;\n    border-top-color: #000000;\n  }\n\n  /* Optional: Adjust the text alignment */\n  span {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const AccountWrapper = styled.div<AccountWrapperProps>`\n  display: flex;\n  flex-direction: ${({expanded}) => expanded ? 'row': 'column'};;\n  justify-content  : space-between ;\n  color: #ffffffde;\n  width: 100%;\n  position: absolute;\n    bottom: 6rem;\n    border-bottom: 1px solid rgb(159, 159, 159);\n    padding: ${({expanded}) => expanded ? '0 0.5rem': '0 0.25rem'};\n    ${media.desktop}{\n      padding: ${({expanded}) => expanded ? '0 0.5rem': '0 0.5rem'};\n    }\n`","import React from 'react'\nimport styled from 'styled-components'\nimport logo from '../../assets/Logo/logo.png'\ninterface LogoProps {\n  height?: string\n  width?: string\n}\n\nconst LogoImage = styled.img<LogoProps>`\n  height: ${(props) => props.height || '24px'};\n  width: ${(props) => props.width || '24px'};\n`\n\nconst Logo: React.FC<LogoProps> = ({height, width}) => {\n  return <LogoImage src={logo} alt=\"Logo\" height={height} width={width} />\n}\n\nexport default Logo\n","import styled from 'styled-components'\nimport Logo from './Logo'\n\ninterface LogoSideNavProps {\n  hideName?: boolean,\n  sizeSmall?: number,\n  sizeLarge?: number\n}\n\nconst LogoSideNav: React.FC<LogoSideNavProps> = ({hideName,sizeSmall = 1.5,sizeLarge = 1.5}) => {\n  return (\n    <NameLogoWrapper>\n      <Logo height={hideName ? `${sizeLarge}rem`: `${sizeSmall}rem`} width={hideName ? `${sizeLarge}rem`: `${sizeSmall}rem`} />\n      {!hideName && <div>DigiBhoomi</div>}\n    </NameLogoWrapper>\n  )\n}\n\nconst NameLogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: white;\n  font-weight: 600;\n  font-size: 1.25rem;\n  \n  font-family: 'Raleway', sans-serif;\n  & > div {\n    margin-left: 1rem;\n  }\n`\n\nexport default LogoSideNav;\n","import LogoSideNav from \"./LogoSideNav\";\n\nexport default LogoSideNav;\n","import  {AccountWrapper, SideNavAccountLabel, SideNavItemWrapper, SideNavLabel, SideNavListWrapper, ToggleButton} from './styles';\nimport { useEffect, useState } from 'react';\nimport Icon, { IconName, IconSidenav } from 'ui/Icon';\nimport { IconEnum } from 'ui/Icon/IconSidenav';\nimport LogoSideNav from 'ui/Logo';\nimport { PROFILE_FEATURE_NAME } from '../Dashboard';\nimport styled from 'styled-components';\nimport media from 'ui/Utils/Media/media';\n\ninterface ISideNav {\n  navList: { name: string; icon: keyof typeof IconEnum }[];\n  activeItem: string;\n  onItemClick: (item: string) => void;\n  hideSideNav: () => void;\n  onProfileClick: () => void;\n  hidden?: boolean;\n};\n\nconst SideNav: React.FC<ISideNav> = ({onProfileClick, navList, activeItem,onItemClick ,hideSideNav,hidden}) => {\n  const [isExpanded, setIsExpanded] = useState(true);\n  const [translate, setTranslate] = useState<'-100%'|'0'>('-100%');\n  const itemClickHandler = (activeItem:string) => {\n    onItemClick(activeItem);\n    if(isExpanded){\n      hideSideNav();\n    }\n  };\n\n  const duration = 100;\n    useEffect(() => {\n        if(!hidden){\n         \n            setTranslate('0')\n        }\n        if(hidden){\n            \n                setTranslate('-100%')\n\n        }\n       }, [hidden]);\n\n  const handleProfileClick = () => {\n    onProfileClick();\n    if(isExpanded){\n      hideSideNav();\n    }\n  }\n  const translatedStyle = {\n    transform: `translateX(${translate})`,\n    transition: `transform ${duration}ms ease-in-out`,\n  }\n\n  // if(hidden){\n  //   return null\n  // }\n\n  return (\n     <SideNavWrapper show={true} expanded={isExpanded} style={translatedStyle}>\n        <LogoSideNav hideName={!isExpanded} sizeLarge={2}/>\n        <SideNavListWrapper expanded={isExpanded}>\n          {navList.map((item,index) => (\n            <SideNavItemWrapper\n              key={index}\n              onClick={() => itemClickHandler(item.name)}\n              className={activeItem === item.name ? 'active' : ''}\n              // isOpen={isOpen}\n            >\n              <IconSidenav zoom={!isExpanded} iconName={item.icon} />\n              <SideNavLabel show={isExpanded}>\n                {item.name}\n              </SideNavLabel>\n            </SideNavItemWrapper>\n        ))}\n        </SideNavListWrapper>\n        <AccountWrapper expanded={isExpanded} className='sidenav-account'>\n            <SideNavItemWrapper\n              key={'account'}\n              onClick={handleProfileClick}\n              className={activeItem === PROFILE_FEATURE_NAME ? 'active' : ''}\n            >\n              <IconSidenav zoom={!isExpanded} iconName={'Account'} />\n              <SideNavAccountLabel show={isExpanded}>\n              Profile\n              </SideNavAccountLabel>\n            </SideNavItemWrapper>\n        </AccountWrapper>\n        <ToggleButton onClick={() => setIsExpanded(!isExpanded)}>\n          <Icon name={isExpanded ? IconName.LeftArrow : IconName.RightArrow} color='white'/>\n        </ToggleButton>\n     </SideNavWrapper>\n  )\n};\n\nconst SideNavWrapper = styled.div<ISideNavWrapper>`\n  position:${({expanded,show}) => (!expanded  && show ) ? 'relative' : 'absolute'};\n  float: left;\n  z-index: 3;\n  height: calc(100% - 3rem);\n  background: linear-gradient(43deg, rgb(1, 29, 54) 39%, rgb(8, 35, 60) 39%, rgb(7, 31, 54) 100%);\n  top: 3rem;\n  flex-direction: column;\n  \n  & > div:first-child {\n    height: 3rem;\n    display: none;\n    border-bottom: 1px solid #9f9f9f;\n    padding-left: ${({expanded}) => expanded ? '2rem' : '1.3rem'};\n  }\n  & > nav {\n    margin-top: 1.5rem;\n  }\n  > div:first-of-type div {\n    margin-right: 6rem;\n   \n  }\n  ${media.desktop}{\n      display: block;\n      position: relative;\n      float: left;\n      height: calc(100%);\n      top: 0rem;\n      animation: none;\n      & > div {\n        display: flex;\n      }\n    & > div:first-child {\n    display: flex;\n  }\n  }\n`\ninterface ISideNavWrapper {\n  show: boolean;\n  expanded: boolean\n}\nexport default SideNav\n","import styled  from \"styled-components\";\nimport media from \"ui/Utils/Media/media\";\n\nconst BodyWrapper = styled.div`\n  height: calc(100% - 3rem);\n  top: 3rem;\n  position: relative;\n  width: 100%;\n  ${media.desktop}{\n    top: 0;\n    height: calc(100vh);\n  }\n`;\n\nconst ActiveComponentWrapper = styled.div`\n  overflow: scroll;\n  height: 100%;\n  \n`;\nexport {ActiveComponentWrapper};\nexport default BodyWrapper;","import { ReactNode, Suspense } from \"react\";\nimport { LoadingAnimation } from \"ui/LoadingAnimation\";\n\ntype LazyComponentWrapperProps = {\n    children: ReactNode;\n  };\n  \nconst LazyComponentWrapper: React.FC<LazyComponentWrapperProps> = ({ children }) => (\n    <Suspense fallback={<LoadingAnimation />}>{children}</Suspense>\n  );\n\n  export default LazyComponentWrapper","import React, { ReactNode, Suspense } from 'react';\nimport LoadingAnimation from 'ui/LoadingAnimation/LoadingAnimation';\nimport BodyWrapper, { ActiveComponentWrapper } from './styles';\nimport { LazyComponentWrapper } from 'app/components/Utils';\n\ninterface DashboardBodyProps {\n  activeComponent: React.ComponentType<any> | undefined;\n}\n\n\nconst DashboardBody: React.FC<DashboardBodyProps> = ({ activeComponent: ActiveComponent }) => {\n  return (\n    <BodyWrapper className='dashboard-body'>\n      {ActiveComponent ? (\n        <LazyComponentWrapper>\n          <ActiveComponentWrapper>\n          <ActiveComponent />\n          </ActiveComponentWrapper>\n        </LazyComponentWrapper>\n        ) : (\n        <div>No component found for the active feature.</div> // Screen\n      )}\n    </BodyWrapper>\n  );\n};\n\nexport default DashboardBody;\n\n","import Icon, { IconName } from 'ui/Icon';\nimport styled, { useTheme } from 'styled-components';\nimport { Box, Row, Text } from 'ui/basic';\nimport { useOptionsButton } from './OptionsProvider';\n\ninterface IMobileHeader{\n    toggleSideNav: () => void;\n    showLogo?: boolean;\n    heading?: string;\n}\n\nconst MobileHeader: React.FC<IMobileHeader> = ({heading,toggleSideNav,showLogo = true}) => {\n    const theme = useTheme()\n    const { hasOptionButton,setDisplayOptions,displayOptions } = useOptionsButton();\n    const handleOptionButtonClick = () => {\n        setDisplayOptions(!displayOptions)\n      };\n    \nconst Brand = <Text type='heading' s={theme.font.fontSizeHeading3} w={6} >DigiBhoomi</Text>\n  return (\n    <MobileHeaderWrapper a='center' j='between' p={'0.5rem'}>\n        <div><Icon name={IconName.Bars} width={1.25} height={1.25} onClick={toggleSideNav} borderRadius={0} /> </div>\n        <div>{heading ? <Text type='heading' s={theme.font.fontSizeHeading3} w={6}>{heading}</Text> : showLogo && Brand }</div>\n        <div>{\n            hasOptionButton  ?\n            <Box h='2rem' w='2rem'>\n            <Icon name={IconName.Ellipsis} width={1.25} height={1.25} onClick={handleOptionButtonClick} borderRadius={0} />\n            </Box>\n            : <Box h='2rem' w='2rem'></Box>\n        }</div>\n    </MobileHeaderWrapper>\n    )\n};\n\nexport default MobileHeader;\n\nconst MobileHeaderWrapper = styled(Row)`\n    position: fixed;\n    box-shadow: rgba(0, 0, 0, 0.083) 0px 1px 4px;\n    height: 3rem;\n    z-index: 1;\n`\n","import MobileHeader from \"./MobileHeader\";\n\nexport default MobileHeader","// sessionStorageManager.ts\n\n// Define a namespace for your storage keys to avoid conflicts\nconst STORAGE_KEY_PREFIX = \"myApp_\";\n\nexport const StorageKeys = {\n  ACTIVE_FEATURE: `${STORAGE_KEY_PREFIX}activeFeature`,\n  // Add more storage keys here as needed\n};\n\nexport function saveToSessionStorage(key: string, data: any) {\n  const storageKey = key;\n  const serializedData = JSON.stringify(data);\n  sessionStorage.setItem(storageKey, serializedData);\n}\n\nexport function loadFromSessionStorage(key: string) {\n  const storageKey = key;\n  const serializedData = sessionStorage.getItem(storageKey);\n  if (serializedData) {\n    return JSON.parse(serializedData);\n  }\n  return null;\n}\n\n// You can add more utility functions here as needed\n","import React, {  lazy, useEffect, useState } from 'react';\nimport SideNav from './SideNav/SideNav';\nimport DashboardBody from './Body/DashboardBody';\nimport MobileHeader from 'app/components/Dashboard/Header/MobileHeader';\nimport { IFeature } from '../DashboardHost/services/Features';\nimport styled from 'styled-components';\nimport { Box } from 'ui/basic';\nimport { OptionsProvider } from './Header/MobileHeader/OptionsProvider';\nimport {  useDispatch } from 'react-redux';\nimport { fetchProfile } from 'store/modules/profileSlice';\nimport { StorageKeys, saveToSessionStorage } from 'utils/sessionStorageManager';\nimport { AppDispatch } from 'store/store';\nimport { fetchContacts } from 'store/modules/contactsSlice';\nimport { useDashboardFeatureContext } from 'app/contexts/Dashboard/DashboardFeatureContext';\n\nconst SellerProfile = lazy(() => import('../Profile/Profile'));\nexport const PROFILE_FEATURE_NAME = 'Profile';\ninterface DashboardProps {\n    features: IFeature[];\n    onLogout?: () => void;\n  }\n\n  const Dashboard: React.FC<DashboardProps> = ({ features }) =>  {\n    const { activeFeature, setActiveFeature } = useDashboardFeatureContext();\n    const [isSideNavVisible, setIsSideNavVisible] = useState(false);\n    const [isActiveFeatureProfile,setIsActiveFeatureProfile] = useState(false);\n\n    useEffect(() => {\n      if(features.length > 0 && !activeFeature) {\n        setActiveFeature(features[0].name);\n      }\n    }, [features, activeFeature, setActiveFeature]);\n\n    const handleSideNavProfileClick = () => {\n      setIsActiveFeatureProfile(true);\n      setActiveFeature(PROFILE_FEATURE_NAME);\n    }\n    const handleFeatureChange = (feature: string) => {\n      setActiveFeature(feature);\n      setIsActiveFeatureProfile(false)\n      saveToSessionStorage(StorageKeys.ACTIVE_FEATURE, feature);\n    };\n\n    const sideNavList = features.map((feature) => {\n      return {\n        name: feature.name,\n        icon: feature.icon,\n      };\n    });\n\n    let activeComponent;\n    if(isActiveFeatureProfile){\n      activeComponent = SellerProfile;\n    }else{\n      activeComponent = features.find(feature => feature.name === activeFeature)?.component;\n    }\n    const dispatch = useDispatch<AppDispatch>();\n    \n    useEffect(() => {\n      if (!activeFeature && features.length > 0) {\n        setActiveFeature(features[0].name);\n      }\n    }, [features, setActiveFeature, activeFeature]);\n\n    useEffect(() => {\n      dispatch(fetchProfile());\n      dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n      <OptionsProvider>\n      <DashboardWrapper>\n        <SideNav\n            navList={sideNavList}\n            activeItem={activeFeature}\n            onItemClick={handleFeatureChange}\n            hidden={!isSideNavVisible}\n            hideSideNav={() => setIsSideNavVisible(false)}\n            onProfileClick={() => handleSideNavProfileClick()}\n        />\n        <MobileHeader heading={activeFeature} \n          toggleSideNav={() => setIsSideNavVisible(!isSideNavVisible)}/>\n        <DashboardBody activeComponent={activeComponent} />\n      </DashboardWrapper>\n      </OptionsProvider>\n    );\n  };\n  \n  const DashboardWrapper = styled(Box)`\n  min-width: 256px;\n  position: fixed;\n  height:100%\n  `\n  \n  export default Dashboard;\n\n","import { createContext, useContext, useState, ReactNode } from \"react\";\n\ninterface OptionsContextType {\n  hasOptionButton: boolean;\n  displayOptions: boolean;\n  setDisplayOptions: (value: boolean) => void;\n  setHasOptionButton: (value: boolean) => void;\n}\n\nconst OptionsContext = createContext<OptionsContextType | undefined>(undefined);\n\nexport const OptionsProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [hasOptionButton, setHasOptionButton] = useState(false);\n  const [displayOptions, setDisplayOptions] = useState(false);\n\n  return (\n    <OptionsContext.Provider\n      value={{\n        hasOptionButton,\n        displayOptions,\n        setDisplayOptions,\n        setHasOptionButton\n      }}\n    >\n      {children}\n    </OptionsContext.Provider>\n  );\n};\n\nexport const useOptionsButton = (): OptionsContextType => {\n  const context = useContext(OptionsContext);\n  if (context === undefined) {\n    throw new Error(\"useOptions must be used within an OptionsProvider\");\n  }\n  return context;\n};\n"],"names":["desktop","tablet","mobile","SideNavListWrapper","styled","_templateObject","_taggedTemplateLiteral","_ref","expanded","media","_ref2","SideNavItemWrapper","_templateObject2","SideNavLabel","_templateObject3","_ref3","show","SideNavAccountLabel","_templateObject4","_ref4","ToggleButton","_templateObject5","Button","_templateObject6","AccountWrapper","_templateObject7","_templateObject8","_ref5","theme","neutralColor","bgElevated","_ref6","textSecondary","_templateObject9","_ref7","_ref8","_ref9","LogoImage","props","height","width","_jsx","src","logo","alt","NameLogoWrapper","hideName","_ref$sizeSmall","sizeSmall","_ref$sizeLarge","sizeLarge","_jsxs","children","Logo","concat","SideNavWrapper","onProfileClick","navList","activeItem","onItemClick","hideSideNav","hidden","_useState","useState","_useState2","_slicedToArray","isExpanded","setIsExpanded","_useState3","_useState4","translate","setTranslate","useEffect","translatedStyle","transform","transition","style","LogoSideNav","map","item","index","onClick","itemClickHandler","name","className","IconSidenav","zoom","iconName","icon","PROFILE_FEATURE_NAME","Icon","IconName","color","BodyWrapper","ActiveComponentWrapper","Suspense","fallback","LoadingAnimation","ActiveComponent","activeComponent","LazyComponentWrapper","heading","toggleSideNav","_ref$showLogo","showLogo","useTheme","_useOptionsButton","useOptionsButton","hasOptionButton","setDisplayOptions","displayOptions","Brand","Text","type","s","font","fontSizeHeading3","w","MobileHeaderWrapper","a","j","p","borderRadius","Box","h","Row","StorageKeys","ACTIVE_FEATURE","SellerProfile","lazy","DashboardWrapper","features","_useDashboardFeatureC","useDashboardFeatureContext","activeFeature","setActiveFeature","isSideNavVisible","setIsSideNavVisible","isActiveFeatureProfile","setIsActiveFeatureProfile","length","_features$find","sideNavList","feature","find","component","dispatch","useDispatch","fetchProfile","fetchContacts","OptionsProvider","SideNav","key","data","storageKey","serializedData","JSON","stringify","sessionStorage","setItem","saveToSessionStorage","MobileHeader","DashboardBody","OptionsContext","createContext","undefined","setHasOptionButton","Provider","value","context","useContext","Error"],"sourceRoot":""}