{"version":3,"file":"static/js/480.7c4a2b85.chunk.js","mappings":"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","sources":["app/components/features/ProductManager/Components/ProductsCard/dimensionsConstants.ts","app/components/features/ProductManager/shops/Food/FormFood.tsx","app/components/features/ProductManager/utils/utils.ts"],"sourcesContent":["import { EShop } from \"app/enums\";\n\nexport const PRODUCT_CARD_DIMENSIONS = {\n  [EShop.Food]: { width: 142, height: 112 },\n  [EShop.Base]: { width: 142, height: 112 },\n};\n","import { useState } from \"react\";\nimport Form, { InputDescription, InputInteger, InputRadio, InputText, CategoryHierarchySelector } from \"ui/Form\";\nimport  styled, { useTheme } from \"styled-components\";\nimport { IProduct, IProductFood } from \"app/interfaces\";\nimport Button, { ButtonUnderlined } from \"ui/Button\";\nimport { Col, Img, Row ,Text} from \"ui/basic\";\nimport { createCategoryTree } from \"../../utils\";\nimport { ImageUploadWithPreview } from \"ui/Image\";\nimport { PRODUCT_CARD_DIMENSIONS } from \"../../Components/ProductsCard/dimensionsConstants\";\nimport { EShop } from \"app/enums\";\n\nexport interface IFormProduct {\n  onSubmit: (item: IProduct, additionalData?: any) => void;\n  products: IProduct[];\n  editMode?: boolean;\n  editProduct?: IProduct;\n};\n\nexport interface IFormProductFood {\n  onSubmit: (item: IProductFood, additionalData: any) => void;\n  products: IProductFood[];\n  editProduct?: IProductFood;\n}\n\ninterface ICategory {\n  [key : string]: ICategory\n}\n\nconst FormProductFood: React.FC<IFormProductFood> = ({ onSubmit, products, editProduct })=> {\n  const theme = useTheme();\n  const categories: ICategory = createCategoryTree(products);\n  const initialName = editProduct ? editProduct.name : \"\";\n  const initialPrice = editProduct ? editProduct.price : '' ;\n  const initialItemType = editProduct ? (editProduct.veg ? \"veg\" : \"nonVeg\") : null;\n  const initialCategory = editProduct ? editProduct.category || \"\" : \"\";\n  const initialDescription = editProduct ? editProduct.description || '': '';\n  const initialImage = editProduct ? editProduct.image || '': '';\n  \n  const [name, setName] = useState(initialName);\n  const [price, setPrice] = useState<number  | ''>(initialPrice);\n  const [itemType, setItemType] = useState<'veg' | 'nonVeg' |null>(initialItemType);\n  const [category,setCategory]  = useState<string>(initialCategory)\n  const [description, setDescription] = useState(initialDescription);\n\n  const [image, setImage] = useState<string>(initialImage);\n\n  const [nameError, setNameError] = useState('');\n  const [priceError, setPriceError] = useState('');\n  const [typeError, setTypeError] = useState('');\n\n  const imageWidth = PRODUCT_CARD_DIMENSIONS[EShop.Food].width\n  const imageHeight = PRODUCT_CARD_DIMENSIONS[EShop.Food].height\n  const imageAspectRatio = +(imageWidth / imageHeight).toFixed(2);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const errors = validateForm();\n    \n    if (Object.values(errors).some(error => error)) {\n      return;\n    }\n    const newProduct: IProductFood = {\n      name,\n      price,\n      description,\n      veg: itemType === 'veg',\n      category,\n      image\n    };\n    onSubmit(newProduct, image);\n  };\n\n  const validateForm = () => {\n    const errors = {\n      name: '',\n      price: '',\n      itemType: '',\n    };\n  \n    if (!name) {\n      errors.name = 'Required';\n    }\n    \n    if (!price) {\n      errors.price = 'Required';\n    }\n    \n    if (!itemType) {\n      errors.itemType = 'Required';\n    }\n  \n    setNameError(errors.name);\n    setPriceError(errors.price);\n    setTypeError(errors.itemType);\n  \n    return errors;\n  };\n\n  const clearError = () => {\n    if(anyError) {\n    setNameError('');\n    setTypeError('');\n    setPriceError('');\n    }\n  }\n  const anyError = nameError || priceError || typeError;\n  const handleNameChange = ( newName : string) => {\n    setName(newName);\n    clearError();\n  }\n  \n  const handlePriceChange = ( newPrice:number | '') => {\n    setPrice(newPrice);\n    clearError();\n  }\n  const handleTypeChange = (updatedType:'veg' | 'nonVeg') => {\n    setItemType(updatedType);\n    clearError();\n  }\n  const handleCategory = (category:string) => {\n    setCategory(category);\n    clearError()\n  }\n  const handlePreview = () => {\n    const formData = {\n      name,\n      price,\n      description,\n      itemType,\n      category,\n    };\n  }\n  const isSaveDisabled = !(name && price && itemType)\n  return (\n    <Form onSubmit={handleSubmit} noValidate style={{gap:'1.5rem'}}>\n      <InputText\n        tt=\"cap\"\n        label=\"Name\"\n        value={name}\n        placeholder=\"Enter Product name\"\n        onChange={handleNameChange}\n        required={true}\n        error={nameError}\n      />\n      <InputInteger\n        label=\"Price\"\n        required={true}\n        value={price}\n        onChange={handlePriceChange}\n        error={priceError}\n      />\n      <InputRadio\n        label=\"Type\"\n        options={[\n          {\n            label: 'Veg',\n            value: 'veg',\n            icon: VegNonVegIcon,\n            colorActive: 'green',\n            colorDisabled: 'gray',\n          },\n          {\n            label: 'Non Veg',\n            value: 'nonVeg',\n            icon: VegNonVegIcon,\n            colorActive: '#da0828',\n            colorDisabled: 'gray',\n          },\n        ]}\n        value={itemType}\n        onChange={handleTypeChange}\n        required={true}\n        error={typeError}\n      />\n      <CategoryHierarchySelector categories={categories} activeCategory={category} onChange={handleCategory}/>\n      <InputDescription\n        value={description}\n        onChange={(updatedDescription) => setDescription(updatedDescription)}\n        label=\"Description\"\n        placeholder=\"Enter product details.\"\n      />\n      <Col a=\"center\">\n        <Row p='0.5rem 0' a=\"center\" j=\"end\">\n          <Row><Text w={5}>Product Image</Text></Row>\n          <Row a=\"center\" j=\"end\" style={{gap:'0.5rem'}}>\n            {image !== '' &&\n              <ButtonUnderlined  border={'none'} variant=\"secondary\" padding=\"2px 4px\"  size=\"small\" type=\"button\" onClick={()=> setImage('')}>Remove</ButtonUnderlined>}\n          </Row>\n        </Row>\n        <Col br=\"8px\" w=\"50%\" p='1rem' a=\"center\" style={{border:'1px solid ' + theme.neutralColor.border }} j=\"center\">\n          {\n            image\n            ? \n            <Img src={image}/>\n            :\n            <ImageUploadWithPreview aspectRatio={imageAspectRatio} onUpload={img => setImage(img)} />\n          }\n        </Col>\n      </Col>\n      <Row j=\"center\" a=\"center\" style={{gap:'1rem'}} p='1rem 0' >\n        <Button padding=\"1rem\" width=\"100%\" type=\"button\" onClick={handlePreview} disabled={isSaveDisabled}>Preview</Button>\n        <Button padding=\"1rem\" width=\"100%\" disabled={isSaveDisabled}>Save</Button>\n      </Row>\n    </Form>\n  );\n};\n\nconst VegNonVegIcon = (color: string) => {\n  return (\n    <Row\n          w=\"initial\"\n          p=\"4px\"\n          m=\"0 0.2rem\"\n          style={{ border: \"1px solid \" + color, borderRadius: \"4px\" }}\n        >\n          <TypeIcon color={color}/>\n        </Row>\n   \n  )\n}\n\nconst TypeIcon = styled.div<{color:string}>`\nwidth: 8px;\nheight: 8px;\nbackground: ${({color}) => color};\nborder-radius: 50%;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n`;\n\n\nexport default FormProductFood;\n\n","import { IProductFood } from \"app/interfaces\";\n\ninterface ICategoryTree {\n  [category: string]: ICategoryTree;\n}\n\nexport const createCategoryTree = (products: IProductFood[]): ICategoryTree => {\n  const categoryTree: ICategoryTree = {};\n\n  products.forEach((product) => {\n    const categoryArr = product.category ? splitAndSanitizeCategory(product.category) : [\"Others\"];\n    let currentLevel: ICategoryTree = categoryTree;\n\n    categoryArr.forEach((category) => {\n      if (!currentLevel[category]) {\n        currentLevel[category] = {};\n      }\n      currentLevel = currentLevel[category];\n    });\n  });\n\n  return categoryTree;\n};\n\nfunction splitAndSanitizeCategory(category: string): string[] {\n  let categories = category.split(\"/\");\n  return categories.filter((cat) => cat.trim() !== \"\").map((cat) => cat.trim().toLowerCase());\n}\n"],"names":["PRODUCT_CARD_DIMENSIONS","_PRODUCT_CARD_DIMENSI","_defineProperty","EShop","width","height","VegNonVegIcon","color","_jsx","Row","w","p","m","style","border","borderRadius","children","TypeIcon","styled","_templateObject","_taggedTemplateLiteral","_ref3","_ref","onSubmit","products","editProduct","theme","useTheme","categories","categoryTree","forEach","product","categoryArr","category","split","filter","cat","trim","map","toLowerCase","currentLevel","createCategoryTree","initialName","name","initialPrice","price","initialItemType","veg","initialCategory","initialDescription","description","initialImage","image","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setPrice","_useState5","_useState6","itemType","setItemType","_useState7","_useState8","setCategory","_useState9","_useState10","setDescription","_useState11","_useState12","setImage","_useState13","_useState14","nameError","setNameError","_useState15","_useState16","priceError","setPriceError","_useState17","_useState18","typeError","setTypeError","imageAspectRatio","toFixed","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","errors","wrap","_context","prev","next","preventDefault","validateForm","Object","values","some","error","abrupt","stop","_x","apply","arguments","clearError","anyError","isSaveDisabled","_jsxs","Form","noValidate","gap","InputText","tt","label","value","placeholder","onChange","newName","required","InputInteger","newPrice","InputRadio","options","icon","colorActive","colorDisabled","updatedType","CategoryHierarchySelector","activeCategory","InputDescription","updatedDescription","Col","a","j","Text","ButtonUnderlined","variant","padding","size","type","onClick","br","neutralColor","Img","src","ImageUploadWithPreview","aspectRatio","onUpload","img","Button","disabled"],"sourceRoot":""}