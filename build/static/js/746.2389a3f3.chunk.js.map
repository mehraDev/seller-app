{"version":3,"file":"static/js/746.2389a3f3.chunk.js","mappings":"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","sources":["app/components/features/ImagePoolManager/components/ImageGallery.tsx","ui/BreadCrumbs/BreadCrumbs.tsx","app/components/features/ImagePoolManager/services/fetchUserNames.ts","app/components/features/ImagePoolManager/components/FileExplorer.tsx","app/components/features/ImagePoolManager/services/getExtension.ts","app/components/features/ImagePoolManager/components/PreviewCard.tsx","app/services/Images/pool/imageUtils.ts","ui/headers/PanelHeader.tsx","app/components/features/ImagePoolManager/components/ImageUploader.tsx","app/components/features/ImagePoolManager/ImagePoolManager.tsx","ui/Backdrop/Backdrop.tsx"],"sourcesContent":["import styled, { keyframes } from \"styled-components\";\nimport { Img } from \"ui/basic\";\n\ninterface IImageGallery{\n  foldersList: string[];\n  images: IImage[];\n  onFolderClick:  (folderName: string) => void;\n  onFileClick:  (folderName: string) => void;\n  isLoading: boolean;\n  hasError: boolean;\n}\nexport interface IImage {\n    name: string;\n    imageUrl?: string;\n}\nconst ImageGallery: React.FC<IImageGallery> = ({ foldersList, onFolderClick,isLoading,images,onFileClick}) => {\n  \n  return (\n    <FolderViewerWrapper>\n      {isLoading ? (\n        <LoadingAnimation>\n          <DotAnimation />\n        </LoadingAnimation>\n      ) : <>\n      {foldersList.map((folder,index) => (\n        <FolderWrapper key={index} onClick={() => onFolderClick(folder)}>\n          {folder}\n        </FolderWrapper>\n      ))}\n      {images.map((image,index) => (\n        <Img src={image.imageUrl} alt={image.name}/>\n      ))}\n    </>}\n    </FolderViewerWrapper>\n\n  );\n};\n\nconst FolderViewerWrapper = styled.div`\n  padding: 10px;\n  margin: 10px 0;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  width: 100%; /* Set the desired width */\n  height: 800px; /* Set the desired height */\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(10rem, 1fr));\n  grid-auto-rows: 10rem;\n  grid-gap: 20px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(auto-fill, minmax(8rem, 1fr));\n    grid-auto-rows: 8rem;\n  }\n`;\n\nconst ImageFileWrapper = styled.div`\n  /* Styles for each image item */\n`;\n\nconst FolderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0.5rem;\n  cursor: pointer;\n  font-size: 1rem;\n\n    margin-top: 10px;\n    font-weight: bold;\n  &:hover {\n    background-color: rgb(71 255 125 / 66%);\n  }\n\n  .icon {\n    margin-right: 0.5rem;\n    color: #666;\n  }\n  background-color: rgb(86 255 135 / 30%);\n  padding: 10px;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nconst LoadingAnimation = styled.div`\n  position: relative;\n  width: 100%;\n  height: 200px; /* Adjust the height as needed */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst dotAnimation = keyframes`\n  0% {\n    transform: scale(0);\n    opacity: 0;\n  }\n  30% {\n    transform: scale(1.2);\n    opacity: 1;\n  }\n  70% {\n    transform: scale(0.8);\n    opacity: 1;\n  }\n  100% {\n    transform: scale(1);\n    opacity: 0;\n  }\n`;\n\nconst DotAnimation = styled.div`\n  position: relative;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.brandColor.primary};\n\n  &::before,\n  &::after {\n    content: \"\";\n    position: absolute;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    background-color: ${({ theme }) => theme.brandColor.primary};\n    animation: ${dotAnimation} 1.2s infinite;\n  }\n\n  &::before {\n    top: -60px;\n    left: 0;\n  }\n\n  &::after {\n    top: 60px;\n    left: 0;\n  }\n`;\n\nexport default ImageGallery;\n","import React from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport { Box, Text } from \"ui/basic\";\n\ninterface IBreadCrumbs {\n  paths: string[];\n  activePath: string;\n  onClick: (key: number) => void;\n}\n\nconst BreadCrumbs: React.FC<IBreadCrumbs> = ({ paths, activePath, onClick }) => {\n  const handleClick = (index: number) => {\n    onClick(index);\n  };\n\n  return (\n    <BreadCrumbsContainer m='0 0.5rem'>\n      {paths.map((path, index) => (\n        <BreadCrumb\n          location={index}\n          path={path}\n          isActive={path === activePath}\n          onClick={() => handleClick(index)}\n          key={index}\n        />\n      ))}\n    </BreadCrumbsContainer>\n  );\n};\n\ninterface IBreadCrumb {\n  path: string;\n  isActive: boolean;\n  location: number;\n  onClick: () => void;\n}\n\nconst BreadCrumb: React.FC<IBreadCrumb> = ({ location, path, isActive, onClick }) => {\n  const theme = useTheme();\n  return (\n    <Box onClick={onClick}>\n      {location !== 0 && <Text  s=\"12\" w={6} m={[0.25]} c={theme.neutralColor.textSecondary}>{'/'}</Text>}\n      <Text hc={theme.brandColor.primaryTextHover} s=\"12\" w={5} m={[0.25]} c={isActive ? theme.brandColor.primaryTextActive : theme.neutralColor.textSecondary}>\n        {path}\n      </Text>\n    </Box>\n  );\n};\n\nconst BreadCrumbsContainer = styled(Box)`\n  width: initial;\n  cursor: pointer;\n`;\n\n\nexport default BreadCrumbs;\n","import { fetchDocument } from \"firebaseServices/firestore\";\n\nasync function fetchUserNames(sellerIDs: string[]): Promise<string[]> {\n    try {\n      const userNames: string[] = [];\n  \n      for (const sellerID of sellerIDs) {\n        const documentData = await fetchDocument(\"sellers\", sellerID);\n        if (documentData && documentData.usr) {\n          const userName = documentData.usr;\n          userNames.push(userName);\n        }\n      }\n      return userNames;\n    } catch (error) {\n      console.error(\"Error fetching user names:\", error);\n      throw new Error(\"Failed to fetch user names\");\n    }\n  }\n  \nexport default fetchUserNames;\n","import React, { useEffect, useState } from \"react\";\nimport ImageGallery, { IImage } from \"./ImageGallery\";\nimport Icon, { IconName } from \"ui/Icon\";\nimport { getDownloadURL, listAll, ref } from \"firebase/storage\";\nimport { storage } from \"firebaseServices/firebase\";\nimport { Box, Col, Row } from \"ui/basic\";\nimport { BreadCrumbs } from \"ui/BreadCrumbs\";\nimport fetchUserNames from \"../services/fetchUserNames\";\nimport Button from \"ui/Button\";\n\ninterface IFileExplorer {\n  path: string[],\n  onUpload: () => void,\n  updatePath: (newPath: string[]) => void \n}\n\nconst FileExplorer: React.FC<IFileExplorer> = ({path,onUpload,updatePath}) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [subFoldersList, setSubFoldersList] = useState<string[]>([]);\n  const [images, setImages] = useState<IImage[]>([]);\n  const [error, setError] = useState<boolean>(false);\n  const [sellersID, setSellersID] = useState<{ [sellerID: string]: string }>({});\n  const activePath = path[path.length -1];\n  const completePath = path.join('/');\n\n  useEffect(() => {\n    const fetchFolderContents = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n        const folderRef = ref(storage, completePath);\n        const folderData = await listAll(folderRef);\n        const subFoldersMetaData = folderData.prefixes;\n        const foldersList = subFoldersMetaData.map(prefix => prefix.name);\n\n        if (activePath === \"usr\") {\n          const userNames = await fetchUserNames(foldersList);\n          const sellersMap: { [sellerID: string]: string } = {};\n          foldersList.forEach((sellerID, index) => {\n            sellersMap[userNames[index]] = sellerID;\n          });\n          setSubFoldersList(userNames);\n          setSellersID(sellersMap);\n        } else {\n          setSubFoldersList(foldersList);\n        }\n\n        const filesMetaData = folderData.items;\n        const imageFiles = await Promise.all(\n          filesMetaData.map(async (file) => {\n            const imageUrl = await getDownloadURL(file);\n            return { name: file.name, imageUrl };\n          })\n        );\n        setImages(imageFiles);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n        setError(true);\n      }\n    };\n    fetchFolderContents();\n  }, [activePath, completePath]);\n  \n  const handlePathChange = (index: number) => {\n    const newPath = path.slice(0, index + 1);\n    updatePath(newPath);\n  };\n  const handleGoBack = () => {\n    if (path.length === 1) {\n      return;\n    }\n    const newPath = path.slice(0, -1);\n    updatePath(newPath);\n  };\n  const handleFolderClick = (folderName:string) => {\n    if(activePath === 'usr'){\n      const sellerID = sellersID[folderName];\n      updatePath([...path, sellerID]);\n    }\n    else{\n      updatePath([...path,folderName]);\n    }\n  };\n  const handleFileClick = (folderName:string) => {\n    updatePath([...path,folderName]);\n  };\n  const isShopPoolPath = path.length === 3 && path[0] === \"s\" && path[2] === \"p\";\n  return (\n    <Col>\n      <Row p='0.5rem 1rem' a=\"center\"  j=\"between\">\n        <Box  w=\"initial\">\n          <Icon name={IconName.GoBack}  onClick={handleGoBack} />\n          <BreadCrumbs  paths={path}  activePath={path[path.length - 1]} onClick={handlePathChange}/>\n        </Box>\n        {isShopPoolPath && (\n          <Box w=\"initial\">\n            <Button onClick={() => onUpload()}>{'Add File'}</Button>\n          </Box>\n        )}\n      </Row>\n      <Row>\n        <ImageGallery foldersList={subFoldersList} onFolderClick={(name) => handleFolderClick(name)} isLoading={loading} images={images} hasError={error} onFileClick={(name) => handleFileClick(name)}/>\n      </Row>\n    </Col>\n  );\n};\n\nexport default FileExplorer;\n","function getExtension(fileName: string): string {\n  const lastDotIndex = fileName.lastIndexOf(\".\");\n  if (lastDotIndex !== -1 && lastDotIndex < fileName.length - 1) {\n    return fileName.substring(lastDotIndex + 1);\n  }\n  return \"\";\n}\n\nexport default getExtension;\n","// PreviewCard.tsx\nimport React, { useState } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport { Backdrop } from \"ui/Backdrop\";\nimport { InputText } from \"ui/Form\";\nimport Icon, { IconName } from \"ui/Icon\";\nimport { Text, Col, Img, Row } from \"ui/basic\";\n\ninterface IPreviewCard {\n  file: File;\n  filename: string; // Initial filename\n  onNameUpdate: (newName: string) => void; // Callback function to update the name in the parent component\n  onDelete: () => void; // Callback function to delete the image\n  isEditing: boolean; // Boolean flag to determine if image is being edited\n}\n\nconst PreviewCard: React.FC<IPreviewCard> = ({ file, filename, onNameUpdate, onDelete, isEditing }) => {\n  const theme = useTheme();\n  const [isEditingLocal, setIsEditingLocal] = useState(isEditing);\n  const [showDeletePopup, setShowDeletePopup] = useState(false); // New state variable for delete popup\n  const imageUrl = URL.createObjectURL(file);\n\n  const handleEditButtonClick = () => {\n    setIsEditingLocal(true);\n  };\n\n  const handleSaveButtonClick = () => {\n    setIsEditingLocal(false);\n  };\n\n  const handleDeleteButtonClick = () => {\n    setShowDeletePopup(true); // Show the delete popup\n  };\n\n  const handleDeleteConfirm = () => {\n    setShowDeletePopup(false); // Close the delete popup\n    onDelete(); // Call the parent component's onDelete function to delete the image\n  };\n\n  const handleDeleteCancel = () => {\n    setShowDeletePopup(false); // Close the delete popup\n  };\n\n  return (\n    <Col style={{ boxShadow: theme.shadow.boxShadow, background: \"white\" }} p=\"0.5rem\">\n      <Row j=\"end\" w=\"initial\" style={{ alignSelf: \"flex-end\", background: \"white\", right: \"0\", borderRadius: \"4px\", gap: \"0.5rem\", boxShadow: theme.shadow.boxShadowSecondary }}>\n        {!isEditingLocal && (\n          <>\n            <Icon name={IconName.Edit} onClick={handleEditButtonClick} color={theme.brandColor.primary} />\n            <Icon name={IconName.Delete} onClick={handleDeleteButtonClick} color={theme.brandColor.red} />\n          </>\n        )}\n      </Row>\n      <Img src={imageUrl} h=\"150px\" />\n      {isEditingLocal ? (\n        <InputText value={filename} onChange={(updatedName) => onNameUpdate(updatedName)} />\n      ) : (\n        <FileName>{filename}</FileName>\n      )}\n      {isEditingLocal && <SaveButton onClick={handleSaveButtonClick}>Save</SaveButton>}\n      {/* Delete Confirmation Popup */}\n      {showDeletePopup && (\n        <Backdrop>\n          <Col w=\"initial\" a=\"center\" j=\"center\" p=\"1rem\" style={{ background: theme.neutralColor.bgContainer, borderRadius: \"6px\" }}>\n            <Text c={theme.brandColor.red}>{`Delete ${filename}?`}</Text>\n            <PopupButtons>\n              <PopupButton onClick={handleDeleteConfirm}>Yes</PopupButton>\n              <PopupButton onClick={handleDeleteCancel}>No</PopupButton>\n            </PopupButtons>\n          </Col>\n        </Backdrop>\n      )}\n    </Col>\n  );\n};\n\nconst FileName = styled.div`\n  /* Styles for the file name */\n`;\n\nconst SaveButton = styled.button`\n  /* Styles for the save button */\n`;\n\nconst PopupButtons = styled.div`\n  /* Styles for the popup buttons */\n  display: flex;\n  gap: 1rem;\n`;\n\nconst PopupButton = styled.button`\n  /* Styles for the popup button */\n  padding: 0.5rem 1rem;\n  background-color: #f44336;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\nexport default PreviewCard;\n","import { ImageMetadata, uploadImageWithMetadata } from \"firebaseServices/Storage/uploadImageToFirebase\";\n\nconst uploadPoolImage = async (imageFile: File, imageName: string, metadata: ImageMetadata, shop: string): Promise<void> => {\n  const validPools = [\"food\", \"cloth\", \"other\"]; // Add other valid pool names here\n  const poolPath = `s/${shop}/p`;\n\n  if (!validPools.includes(shop)) {\n    throw new Error(`Invalid pool name: ${shop}`);\n  }\n  const storageFolderPath = poolPath; // Public image storage folder path\n  const firestorePoolStorage = \"imagedb/sellers/\" + shop; // Firestore collection path for public images\n  const sanitisedName = generateCleanImageNameWithShortUUID(imageName);\n  await uploadImageWithMetadata(imageFile, storageFolderPath, firestorePoolStorage, sanitisedName, metadata);\n};\n\ninterface ImageData {\n  image: File;\n  imageName: string;\n  meta: ImageMetadata;\n}\n\nconst cleanImageName = (imageName: string): string => {\n  imageName = imageName.toLowerCase();\n  imageName = imageName.replace(/ /g, \"_\");\n  imageName = imageName.replace(/[^a-zA-Z0-9-_\\.]/g, \"\");\n  imageName = imageName.replace(/[-_]{2,}/g, \"_\");\n  return imageName;\n};\n\nconst generateShortUUID = (): string => {\n  const characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n  const length = 8;\n\n  const result = Array.from({ length }, () => {\n    const randomIndex = Math.floor(Math.random() * characters.length);\n    return characters.charAt(randomIndex);\n  }).join(\"\");\n\n  return result;\n};\n\nconst generateCleanImageNameWithShortUUID = (imageName: string): string => {\n  const cleanedImageName = cleanImageName(imageName);\n  const shortUUID = generateShortUUID();\n\n  const finalImageName = `${cleanedImageName}-${shortUUID}`;\n  return finalImageName;\n};\n\nconst uploadPoolImages = async (imagesData: ImageData[], shop: string): Promise<void> => {\n  try {\n    for (const data of imagesData) {\n      const { image, imageName, meta } = data;\n      await uploadPoolImage(image, imageName, meta, shop);\n    }\n  } catch (error) {\n    console.log(\"Error Uploading Images: \", error);\n    throw new Error(\"Images Upload Failed\");\n  }\n};\n\nexport { uploadPoolImages, uploadPoolImage };\n","import styled, { css } from \"styled-components\";\nimport { Row } from \"ui/basic\";\n\nexport const PanelHeader = styled(Row)`\n  align-items: center;\n  justify-content: space-between;\n   border-bottom: 1px solid ${({theme }) => theme.neutralColor.border};\n   padding: 1rem;\n   margin-bottom: 0.5rem;\n   font-size: large;\n   font-weight: 700;\n   color: ${({theme }) => theme.brandColor.primaryActive};\n  ${({ color }) =>\n    color &&\n    css`\n      color: ${color};\n    `}\n  div{\n    margin-right: 1rem;\n  }\n  h3 {\n    flex-grow: 1;\n    text-align: center;\n    margin-right: 2rem;\n  }\n`","// ImageUploader.tsx\nimport React, { useState } from \"react\";\nimport { Text, Col, Grid, Row } from \"ui/basic\";\nimport Button from \"ui/Button\";\nimport { getExtension } from \"../services\"; //removeExtension\nimport PreviewCard from \"./PreviewCard\";\n// import { ImageMetadata } from \"firebaseServices/Storage/uploadImageToFirebase\";\nimport { uploadPoolImages } from \"app/services/Images/pool/imageUtils\";\nimport theme from \"ui/Utils/Media/Theme/theme\";\nimport { PanelHeader } from \"ui/headers\";\nimport Icon, { IconName } from \"ui/Icon\";\n// import { InputFile } from \"ui/Form\";\nimport { LoadingAnimation } from \"ui/LoadingAnimation\";\nimport { Backdrop } from \"ui/Backdrop\";\n\n\ninterface ImageUploaderProps {\n  onUpload: (files: File[]) => void;\n  path: string;\n  onClose: () => void;\n}\n\nconst ImageUploader: React.FC<ImageUploaderProps> = ({ onUpload, onClose, path }) => {\n  const [selectedImages, setSelectedImages] = useState<File[]>([]);\n  const [isUploading, setIsUploading] = useState<boolean>(false);\n  const [, setUploadMessage] = useState<string>(\"\");\n  const [names, setNames] = useState<string[]>([]);\n\n  // const handleInputFile = (files: FileList | null) => {\n  //   if (files) {\n  //     const mergedFiles = selectedImages ? [...selectedImages, ...Array.from(files)] : Array.from(files);\n  //     setSelectedImages(mergedFiles);\n  //     const newNames = mergedFiles.map((image) => {\n  //       const fileNameWithoutExtensioin = removeExtension(image.name);\n  //       return fileNameWithoutExtensioin;\n  //     });\n  //     setNames(newNames);\n  //   }\n  // };\n\n  const handleUpdateName = (newName: string, index: number) => {\n    setNames((prevNames) => {\n      const updatedNames = [...prevNames];\n      updatedNames[index] = newName;\n      return updatedNames;\n    });\n  };\n\n  const handleDeleteImage = (index: number) => {\n    setSelectedImages((prevImages) => {\n      const updatedImages = [...prevImages];\n      updatedImages.splice(index, 1);\n      return updatedImages;\n    });\n    setNames((prevNames) => {\n      const updatedNames = [...prevNames];\n      updatedNames.splice(index, 1);\n      return updatedNames;\n    });\n  };\n\n  const handleUploadImages = async () => {\n    if (names.some((name) => name.trim() === \"\")) {\n      alert(\"Image name cannot be empty.\");\n      return;\n    }\n\n    setIsUploading(true);\n    try {\n      const namesWithExtension = names.map((name, index) => {\n        const extension = getExtension(selectedImages[index].name);\n        return `${name}.${extension}`;\n      });\n\n      if (path.includes(\"/p\")) {\n        const shopName =  path.split(\"/\")[1];\n        const timestamp = Date.now();\n        const imagesArr =  selectedImages.map((image, index) => ({\n          image,\n          name: names[index],\n          imageName: namesWithExtension[index],\n          meta: {\n            timestamp,\n            oname: names[index]\n          }\n        }));\n        await uploadPoolImages(\n          imagesArr,\n          shopName\n        );\n      }\n      setUploadMessage(\"Success\");\n    } catch (error) {\n      setUploadMessage(\"Images Upload Failed\");\n    } finally {\n      setIsUploading(false);\n      setSelectedImages([]);\n      setNames([]);\n    }\n  };\n\n  const handleDownloadZip = () => {\n  };\n\n  const isUploadingInProgress = isUploading ;\n  console.log(!selectedImages.length,'!selectedImages.length')\n  return (\n    <Col style={{ background: theme.neutralColor.bgContainer }} h=\"100%\" w=\"100%\">\n      <PanelHeader>\n        <Text>Image Uploader</Text>\n        <Icon name={IconName.Close} onClick={onClose} />\n      </PanelHeader>\n      <Row p=\"0.5rem 1rem\" style={{ gap: \"1rem\" }} a=\"center\" j=\"end\">\n        <Button size=\"small\" onClick={handleDownloadZip}>\n          Download Zip\n        </Button>\n        {/* <InputFile  multiple={true} accept=\".jpg,.png,.gif\" onFileChange={handleInputFile} /> */}\n        <Button size=\"small\" onClick={handleUploadImages} disabled={isUploadingInProgress || !selectedImages.length || names.some((name) => name === '')}>\n          Save to Pool\n        </Button>\n      </Row>\n      <Row p=\"0.5rem 1rem\" j=\"between\">\n        <Text>Total Images: {selectedImages.length}</Text>\n      </Row>\n      {selectedImages.length > 0 && (\n        <Grid columns={4} mc={[0.5]} style={{ backgroundColor: \"#f8f8f8\" }}>\n          {selectedImages.map((image, index) => (\n            <PreviewCard\n              file={image}\n              key={index}\n              filename={names[index]}\n              onNameUpdate={(newName) => handleUpdateName(newName, index)}\n              onDelete={() => handleDeleteImage(index)}\n              isEditing={names[index].trim() === \"\"}\n            />\n          ))}\n        </Grid>\n      )}\n      {isUploading &&\n      <Backdrop>\n         <LoadingAnimation />\n      </Backdrop>\n      }\n      {/* {uploadMessage && <Text>{uploadMessage}</Text>} */}\n    </Col>\n  );\n};\n\nexport default ImageUploader;\n","import { useState } from \"react\";\nimport FileExplorer from \"./components/FileExplorer\";\nimport ImageUploader from \"./components/ImageUploader\";\nimport { Box } from \"ui/basic\";\nimport { Backdrop } from \"ui/Backdrop\";\n\nconst ROOT_LOCATION = 's'\nconst ImagePoolManager = () => {\n  const [location, setLocation] = useState([ROOT_LOCATION]);\n  const [uploader,setUploader] = useState(false);\n  \n  return (\n    <Box style={{position: 'relative'}}>\n      <FileExplorer path={location} onUpload={() => setUploader(true)} updatePath={(newPath) => setLocation(newPath)}/>\n      {\n        uploader && (\n          <Backdrop>\n            <ImageUploader path={location.join('/')} onUpload={(i)=> console.log(i)} onClose={() => setUploader(false)}/>\n          </Backdrop>\n        )\n      }\n    </Box>\n  );\n};\nexport default ImagePoolManager;\n","import { ReactNode } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport { Box, Col } from \"ui/basic\";\n\ninterface IBackdrop {\n  onClose?: () => void;\n  children: ReactNode;\n}\n\nconst Backdrop: React.FC<IBackdrop> = ({ onClose, children }) => {\n  const theme = useTheme();\n\n  return (\n    <Wrapper style={{ background: theme.neutralColor.bgMask }}>\n      <Col\n        h=\"100%\"\n        j=\"center\"\n        a=\"center\"\n        style={{\n          position: \"relative\",\n        }}\n      >\n        {children}\n      </Col>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(Box)`\n  width: 100%;\n  position: fixed;\n  height: 100%;\n  top: 0;\n  left:0;\n  z-index: 9;\n`;\n\nexport default Backdrop;\n"],"names":["FolderViewerWrapper","styled","_templateObject","_taggedTemplateLiteral","FolderWrapper","_templateObject2","_templateObject3","LoadingAnimation","_templateObject4","dotAnimation","keyframes","_templateObject5","DotAnimation","_templateObject6","_ref2","theme","brandColor","primary","_ref3","_ref","foldersList","onFolderClick","isLoading","images","onFileClick","_jsx","children","_jsxs","_Fragment","map","folder","index","onClick","image","Img","src","imageUrl","alt","name","BreadCrumb","location","path","isActive","useTheme","Box","Text","s","w","m","c","neutralColor","textSecondary","hc","primaryTextHover","primaryTextActive","BreadCrumbsContainer","paths","activePath","handleClick","_fetchUserNames","_asyncToGenerator","_regeneratorRuntime","mark","_callee","sellerIDs","userNames","_iterator","_step","sellerID","documentData","userName","wrap","_context","prev","next","_createForOfIteratorHelper","n","done","value","fetchDocument","sent","usr","push","t0","e","f","finish","abrupt","t1","console","error","Error","stop","apply","arguments","_x","onUpload","updatePath","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","subFoldersList","setSubFoldersList","_useState5","_useState6","setImages","_useState7","_useState8","setError","_useState9","_useState10","sellersID","setSellersID","length","completePath","join","useEffect","fetchFolderContents","_callee2","folderRef","folderData","subFoldersMetaData","sellersMap","filesMetaData","imageFiles","_context2","ref","storage","listAll","prefixes","prefix","fetchUserNames","forEach","items","Promise","all","file","getDownloadURL","isShopPoolPath","Col","Row","p","a","j","Icon","IconName","newPath","slice","BreadCrumbs","Button","ImageGallery","folderName","concat","_toConsumableArray","handleFolderClick","hasError","fileName","lastDotIndex","lastIndexOf","substring","FileName","SaveButton","PopupButtons","PopupButton","filename","onNameUpdate","onDelete","isEditing","isEditingLocal","setIsEditingLocal","showDeletePopup","setShowDeletePopup","URL","createObjectURL","style","boxShadow","shadow","background","alignSelf","right","borderRadius","gap","boxShadowSecondary","color","red","h","InputText","onChange","updatedName","Backdrop","bgContainer","uploadPoolImage","imageFile","imageName","metadata","shop","validPools","poolPath","storageFolderPath","firestorePoolStorage","sanitisedName","includes","generateCleanImageNameWithShortUUID","uploadImageWithMetadata","_x2","_x3","_x4","cleanedImageName","toLowerCase","replace","cleanImageName","shortUUID","characters","Array","from","randomIndex","Math","floor","random","charAt","generateShortUUID","uploadPoolImages","imagesData","data","meta","log","_x5","_x6","PanelHeader","border","primaryActive","css","onClose","selectedImages","setSelectedImages","isUploading","setIsUploading","setUploadMessage","names","setNames","handleUploadImages","namesWithExtension","shopName","timestamp","imagesArr","some","trim","alert","extension","getExtension","split","Date","now","oname","isUploadingInProgress","size","disabled","Grid","columns","mc","backgroundColor","PreviewCard","newName","prevNames","updatedNames","handleUpdateName","prevImages","updatedImages","splice","handleDeleteImage","setLocation","uploader","setUploader","position","FileExplorer","ImageUploader","i","Wrapper","bgMask"],"sourceRoot":""}