{"version":3,"file":"static/js/497.9f783b77.chunk.js","mappings":"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","sources":["app/components/Profile/Components/ProfileCard/ContactPopup/ContactPopup.tsx","app/components/Profile/Components/ProfileCard/ContactBar/ContactBar.tsx","app/components/Profile/Components/ProfileCard/ProfileCard.tsx","app/components/Profile/Components/ProfileCard/index.tsx","ui/Backdrop/Backdrop.tsx","ui/Card/Card.tsx","ui/ImageWithFallback/index.tsx","ui/ImageWithFallback/ImageWithFallback.tsx","ui/Popup/PopupStatus.tsx","ui/Popup/Popup.tsx","ui/Popup/index.ts"],"sourcesContent":["import React from \"react\";\nimport { useTheme } from \"styled-components\";\nimport Icon, { IconName } from \"ui/Icon\";\nimport { Backdrop } from \"ui/Backdrop\";\nimport { Text, Row, Col } from \"ui/basic\";\nimport { IContactItem } from \"app/interfaces/Shop/Contacts\";\n\nexport interface IContactButtonOverlay {\n  iconName: IconName;\n  contact: IContactItem;\n  color: string;\n}\ninterface IContactPopup {\n  onContact: (index: number) => void;\n  contactButtons: IContactButtonOverlay[];\n  onClose: () => void;\n  name: string;\n}\n\nconst ContactPopup: React.FC<IContactPopup> = ({\n  onContact,\n  onClose,\n  contactButtons,\n  name,\n}) => {\n  const theme = useTheme();\n  return (\n    <Backdrop>\n      <Row\n        style={{\n          zIndex: 11,\n          position: \"absolute\",\n          bottom: 0,\n          padding: \" 0.5rem 0.5rem 1rem\",\n        }}\n      >\n        <Col\n          style={{\n            background: theme.neutralColor.bgContainer,\n            borderRadius: \"6px\",\n            boxShadow: theme.shadow.boxShadow,\n          }}\n          p=\"1rem\"\n        >\n          <Row a=\"center\" p=\"0rem 0 1rem\" j=\"between\">\n            <Text s=\"20\" w={6} tt=\"cap\">\n              {name}\n            </Text>\n            <Icon\n              borderRadius={0.35}\n              name={IconName.Close}\n              color={contactButtons[0].color}\n              width={1.4}\n              height={1.4}\n              onClick={() => onClose()}\n            />\n          </Row>\n          <Col p=\"0.5rem\" style={{ gap: \"0.5rem\" }}>\n            {contactButtons &&\n              contactButtons.length &&\n              contactButtons.map((contact, index) => (\n                <Row\n                  key={index}\n                  style={{\n                    border: \"1px solid\" + theme.neutralColor.border,\n                    borderRadius: \"6px\",\n                    gap: \"1rem\",\n                  }}\n                  onClick={() => onContact(index)}\n                  a=\"center\"\n                  p=\"0.5rem 1rem\"\n                >\n                  <Icon\n                    borderRadius={0.35}\n                    name={contact.iconName}\n                    color={contact.color}\n                    width={1.4}\n                    height={1.4}\n                  />\n                  <Text>{contact.contact.name}</Text>\n                </Row>\n              ))}\n          </Col>\n        </Col>\n      </Row>\n    </Backdrop>\n  );\n};\n\nexport default ContactPopup;\n","import React, { useState } from \"react\";\nimport Icon, { IconName } from \"ui/Icon\";\nimport ContactPopup, { IContactButtonOverlay } from \"../ContactPopup/ContactPopup\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"store/store\";\nimport { Col } from \"ui/basic\";\n\ninterface IContactCard {\n}\n\nconst ContactBar: React.FC<IContactCard> = () => {\n  const { list: contacts, isLoading, error } = useSelector((state: RootState) => state.contacts);\n\n  const [activeOverlay, setActiveOverlay] = useState<\n    | IconName.Phone\n    | IconName.Whatsapp\n    | IconName.Facebook\n    | IconName.Instagram\n    | \"\"\n  >(\"\");\n\n  if (isLoading || error || !contacts) {\n    return null;\n  }\n  const { ph:phone, wa, fb, insta } = contacts;\n\n  const phoneColor = \"#0762e1\";\n  const waColor = \"#0ba544\";\n  const fbColor = \"#1166d5\";\n  const igColor = \"#ed1a60\";\n\n  const handleContactClick = (index: number) => {\n    if (activeOverlay === IconName.Phone) {\n      window.location.href = `tel:${phone[index].value}`;\n    } else if (activeOverlay === IconName.Whatsapp) {\n      const whatsappNumber = wa[index].value;\n      window.location.href = `https://wa.me/${whatsappNumber}`;\n    } else if (activeOverlay === IconName.Facebook) {\n      const facebookUsername = fb[index].value;\n      window.open(`https://www.facebook.com/p/${facebookUsername}`, \"_blank\");\n    } else if (activeOverlay === IconName.Instagram) {\n      const instagramUsername = insta[index].value;\n      window.open(`https://www.instagram.com/${instagramUsername}`, \"_blank\");\n    }\n    setActiveOverlay(\"\");\n  };\n\n  const handleIconClick = (\n    name:\n      | IconName.Phone\n      | IconName.Whatsapp\n      | IconName.Facebook\n      | IconName.Instagram\n  ) => {\n    setActiveOverlay(name);\n  };\n\n  let contactButtons: IContactButtonOverlay[] = [];\n  if (activeOverlay === IconName.Phone) {\n    contactButtons = phone.map((item) => ({\n      contact: { name: item.name, value: item.value },\n      color: phoneColor,\n      iconName: IconName.Phone,\n    }));\n  } else if (activeOverlay === IconName.Whatsapp) {\n    contactButtons = wa.map((item) => ({\n      contact: { name: item.name, value: item.value },\n      color: waColor,\n      iconName: IconName.Whatsapp,\n    }));\n  } else if (activeOverlay === IconName.Facebook) {\n    contactButtons = fb.map((item) => ({\n      contact: { name: item.name, value: item.value },\n      color: fbColor,\n      iconName: IconName.Facebook,\n    }));\n  } else if (activeOverlay === IconName.Instagram) {\n    contactButtons = insta.map((item) => ({\n      contact: { name: item.name, value: item.value },\n      color: igColor,\n      iconName: IconName.Instagram,\n    }));\n  }\n\n  return (\n    <Col  w=\"initial\" style={{ gap: \"8px\"}}>\n      {phone.length !== 0 && (\n        <Icon\n          borderRadius={0.35}\n          name={IconName.Phone}\n          color={phoneColor}\n          width={1.4}\n          height={1.4}\n          onClick={() => handleIconClick(IconName.Phone)}\n        />\n      )}\n      {wa.length !== 0 && (\n        <Icon\n          borderRadius={0.35}\n          name={IconName.Whatsapp}\n          width={1.4}\n          height={1.4}\n          color={waColor}\n          onClick={() => handleIconClick(IconName.Whatsapp)}\n        />\n      )}\n      {insta.length !== 0 && (\n        <Icon\n          borderRadius={0.35}\n          name={IconName.Instagram}\n          width={1.4}\n          height={1.4}\n          color={igColor}\n          onClick={() => handleIconClick(IconName.Instagram)}\n        />\n      )}\n      {fb.length !== 0 && (\n        <Icon\n          borderRadius={0.35}\n          name={IconName.Facebook}\n          color={fbColor}\n          width={1.4}\n          height={1.4}\n          padding=\"4px\"\n          onClick={() => handleIconClick(IconName.Facebook)}\n        />\n      )}\n      {activeOverlay && (\n        <ContactPopup\n          onContact={handleContactClick}\n          contactButtons={contactButtons}\n          onClose={() => setActiveOverlay(\"\")}\n          name={activeOverlay}\n        />\n      )}\n    </Col>\n  );\n};\n\nexport default ContactBar;\n","import { Col, Row, Text } from \"ui/basic\";\nimport { useTheme } from \"styled-components\";\nimport Icon, { IconName } from \"ui/Icon\";\nimport ImageWithFallback from \"ui/ImageWithFallback\";\nimport placeholderProfileImage from '../../../../../assets/shop/profile-placeholder.png'\nimport ContactBar from \"./ContactBar/ContactBar\";\nimport { ISellerProfile } from \"app/interfaces\"; // Import ISellerProfile interface\nimport React from \"react\";\n\n\ninterface IProfileCard {\n  profile: ISellerProfile;\n  logo:string;\n};\n\nconst ProfileCard: React.FC<IProfileCard> = ({ logo, profile}) => {\n  const theme = useTheme();\n    const { name, about, address }: ISellerProfile = profile;\n    const profileBasic = (\n      <>\n        <ImageWithFallback src={logo} fallbackImage={placeholderProfileImage} alt='Logo' />\n        <Text tt=\"cap\" s=\"20\" w={6} type=\"heading\" c={theme.neutralColor.text}>\n        {name}\n      </Text>\n      <About tags={about} />\n      {address && (\n        <Row\n          a=\"center\"\n          w=\"initial\"\n          p=\"6px\"\n          style={{\n            border: \" 1px solid #ca1a193d\",\n            borderLeft: \"0px\",\n            borderRight: \"0px\",\n          }}\n        >\n          <Icon\n            name={IconName.Location}\n            width={1}\n            padding=\"0\"\n            color={\"#CA1919\"}\n            borderRadius={0.35}\n            height={1}\n          />\n          <Text\n            tt=\"cap\"\n            ml=\"8px\"\n            c={theme.neutralColor.textSecondary}\n            s=\"12\"\n            w={5}\n          >\n            {address}\n          </Text>\n        </Row>\n      )}\n        <Col\n          w=\"initial\"\n          style={{ gap: \"8px\", position: \"absolute\", right: \"1rem\",top:'3rem' }}\n        >\n          <ContactBar/>\n        </Col>\n      </>\n    );\n\n    return (\n      <Col a=\"center\" p={'1rem'} style={{gap:'0.5rem',background: theme.neutralColor.bgContainer,boxShadow: 'rgba(0, 0, 0, 0.069) 0px 1px 4px',position:'relative'}}>\n         {profileBasic}\n      </Col>\n    );\n};\n\nexport default ProfileCard;\n\n\n\nconst About: React.FC<{ tags: string[] }> = ({ tags }) => {\n  const theme = useTheme();\n  const shouldDisplayLeafIcon = tags.some((tag) =>\n    \"Pure-Veg\".toLowerCase().includes(tag.toLowerCase())\n  );\n  return (\n    <>\n      {tags.length > 0 && (\n        <Row j=\"center\" a=\"center\">\n          {shouldDisplayLeafIcon && (\n            <Icon\n              name={IconName.Leaf}\n              width={1}\n              height={1}\n              padding=\"0\"\n              color={\"#43A047\"}\n              style={{ marginRight: \"2px\" }}\n            />\n          )}\n          {tags.map((item, index) => (\n            <React.Fragment key={index}>\n              <Text  tt=\"cap\" c={theme.neutralColor.textSecondary} s=\"14\">\n                {item}\n              </Text>\n              {index < tags.length - 1 && (\n                <Icon\n                  name={IconName.Diamond}\n                  width={0.3}\n                  height={0.3}\n                  color={\"#FFA000\"}\n                />\n              )}\n            </React.Fragment>\n          ))}\n        </Row>\n      )}\n    </>\n  );\n};\n\n","import ProfileCard from \"./ProfileCard\";\n\nexport default ProfileCard;","import { ReactNode } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport { Box, Col } from \"ui/basic\";\n\ninterface IBackdrop {\n  onClose?: () => void;\n  children: ReactNode;\n}\n\nconst Backdrop: React.FC<IBackdrop> = ({ onClose, children }) => {\n  const theme = useTheme();\n\n  return (\n    <Wrapper style={{ background: theme.neutralColor.bgMask }}>\n      <Col\n        h=\"100%\"\n        j=\"center\"\n        a=\"center\"\n        style={{\n          position: \"relative\",\n        }}\n      >\n        {children}\n      </Col>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(Box)`\n  width: 100%;\n  position: fixed;\n  height: 100%;\n  top: 0;\n  left:0;\n  z-index: 9;\n`;\n\nexport default Backdrop;\n","import styled from \"styled-components\";\nimport { Col } from \"ui/basic\";\n\nconst Card = styled(Col)`\nborder-radius: 6px;\nbox-shadow: ${({theme}) => theme.shadow.boxShadow};\nbackground: ${({theme}) => theme.neutralColor.bgContainer};;\n`\n\nexport default Card;\n\n","import ImageWithFallback from \"./ImageWithFallback\";\n\nexport default ImageWithFallback\n","import { useState } from \"react\";\nimport { Img } from \"ui/basic\"\n\ninterface IImageWithFallback {\n    src : string,\n    fallbackImage?: string,\n    alt: string\n    w? : string,\n    h? : string,\n    br? : string\n}\nconst ImageWithFallback: React.FC<IImageWithFallback> = ({src, fallbackImage,alt,w = '9rem',h = '9rem',br = '10px'}) => {\n  const [isProfileImgError,setIsProfileImgError] = useState(false);\n  const imageUrl = isProfileImgError ?\n    (fallbackImage )\n    :\n    src ;\n  const handleImageError = () => {\n    setIsProfileImgError(true)\n  };\n\n  return (<Img\n           src={imageUrl}\n                alt={alt}\n                w={w}\n                h={h}\n                br={br}\n                onError={handleImageError}\n              />\n  );\n};\n\nexport default ImageWithFallback\n;\n","import React from \"react\";\nimport { useTheme } from \"styled-components\";\nimport { Backdrop } from \"ui/Backdrop\";\nimport { Row, Text, Col } from \"ui/basic\";\nimport Button from \"ui/Button\";\nimport Icon, { IconName } from \"ui/Icon\";\n\ninterface IPopupStatus {\n  mode: EPopupModes\n  onClose: () => void;\n  message? : string;\n}\nexport enum EPopupModes {\n  None = 'none',\n  Success = 'success',\n  Error = 'error',\n}\n\nconst PopupStatus: React.FC<IPopupStatus> = ({ mode, onClose,message }) => {\n    const theme = useTheme();\n    const isSuccess = mode === EPopupModes.Success;\n    const successColor = '#38a81c';\n    const errorColor = theme.errorColor.error;\n    const errorMessageBg = theme.errorColor.errorBorder;\n    const successMessageBg = '#b0eea1';\n  return mode !== EPopupModes.None ? (\n    <Backdrop>\n    <Col br=\"8px\" w=\"80%\" style={{ gap: '2rem', padding: '1.5rem 1rem' , background: theme.neutralColor.bgContainer }} a=\"center\">\n      <Icon style={{background: isSuccess ? successColor :  errorColor}}\n        name={isSuccess ? IconName.Check :  IconName.Xmark}\n        color='#fff'  padding=\"6px\" br='50%'  width={5} height={5}/>\n        <Text tt=\"cap\" s=\"18\" w={6} c={theme.neutralColor.text}>\n                {isSuccess ? 'Success' : 'Error' }\n              </Text>\n              {message && (\n            <Row a=\"center\" j=\"center\" p={'1rem'} style={{background: isSuccess ? successMessageBg : errorMessageBg}} br=\"8px\">\n              <Text tt=\"cap\" s=\"12\" c={isSuccess ? successColor : errorColor}>\n                {message}\n              </Text>\n            </Row>\n          )}\n     <Row a=\"center\" j=\"center\" style={{gap:'1rem'}}>\n        <Button  width=\"50%\" onClick={onClose}\n        bg={isSuccess ? '#4CBB17' : theme.errorColor.error}\n        >\n        {isSuccess ? 'Done' : 'Close'}\n            </Button>\n     </Row>\n    </Col>\n  </Backdrop>\n  ) : null;\n};\n\nexport default PopupStatus;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IPopupProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  isOpen: boolean;\n  title: string\n}\n\nconst Popup: React.FC<IPopupProps> = ({ onClose, children ,isOpen,title}) => {\n    if (!isOpen) {\n        return null;\n      }\n  return (\n    <Overlay>\n      <PopupContainer>\n        <Header>\n          <Title>{title}</Title>\n          <CloseButton onClick={onClose}>X</CloseButton>\n        </Header>\n        <Content>{children}</Content>\n      </PopupContainer>\n    </Overlay>\n  );\n};\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5); /* Adjust the transparency as needed */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst PopupContainer = styled.div`\n  background-color: white;\n  padding: 1rem;\n  border-radius: 6px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n`;\n\nconst Title = styled.h3`\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 20px;\n`;\n\nconst Content = styled.div`\n  /* Add any additional styling for the content */\n`;\n\nexport default Popup;\n","import Popup from \"./Popup\";\nimport ConfirmationPopup from \"./PopupConfirmation\";\nimport PopupStatus from \"./PopupStatus\";\n\nexport default Popup;\nexport { ConfirmationPopup, PopupStatus };\n"],"names":["_ref","onContact","onClose","contactButtons","name","theme","useTheme","_jsx","Backdrop","children","Row","style","zIndex","position","bottom","padding","_jsxs","Col","background","neutralColor","bgContainer","borderRadius","boxShadow","shadow","p","a","j","Text","s","w","tt","Icon","IconName","color","width","height","onClick","gap","length","map","contact","index","border","iconName","_useSelector","useSelector","state","contacts","list","isLoading","error","_useState","useState","_useState2","_slicedToArray","activeOverlay","setActiveOverlay","phone","ph","wa","fb","insta","phoneColor","waColor","fbColor","igColor","handleIconClick","item","value","ContactPopup","window","location","href","concat","whatsappNumber","facebookUsername","open","instagramUsername","logo","profile","about","address","profileBasic","_Fragment","ImageWithFallback","src","fallbackImage","alt","type","c","text","About","tags","borderLeft","borderRight","ml","textSecondary","right","top","ContactBar","_ref2","shouldDisplayLeafIcon","some","tag","toLowerCase","includes","marginRight","React","Wrapper","styled","Box","_templateObject","_taggedTemplateLiteral","bgMask","h","_ref$w","_ref$h","_ref$br","br","isProfileImgError","setIsProfileImgError","imageUrl","Img","onError","EPopupModes","mode","message","isSuccess","Success","successColor","errorColor","errorMessageBg","errorBorder","None","Button","bg","Overlay","PopupContainer","_templateObject2","Header","_templateObject3","Title","_templateObject4","CloseButton","_templateObject5","Content","_templateObject6","isOpen","title"],"sourceRoot":""}